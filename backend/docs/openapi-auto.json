{
  "openapi": "3.0.3",
  "info": {
    "title": "Order Management System API",
    "description": "Auto-generated OpenAPI spec from tRPC routes with OpenAPI metadata",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001/api/v1"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "operationId": "auth-login",
        "summary": "User login",
        "description": "Authenticate user with email and password",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  }
                },
                "required": [
                  "email",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "email",
                        "name",
                        "role"
                      ],
                      "additionalProperties": false
                    },
                    "session": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string"
                        },
                        "refresh_token": {
                          "type": "string"
                        },
                        "expires_at": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "access_token",
                        "refresh_token"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "user",
                    "session"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "auth-register",
        "summary": "User registration",
        "description": "Register a new admin user",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "email",
                  "password",
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "email",
                        "name",
                        "role"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "operationId": "auth-me",
        "summary": "Get current user",
        "description": "Get current authenticated user information",
        "tags": [
          "auth"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "user_id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "email",
                        "name",
                        "role",
                        "user_id"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "auth-refresh",
        "summary": "Refresh token",
        "description": "Refresh authentication token",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string"
                  }
                },
                "required": [
                  "refresh_token"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "session": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string"
                        },
                        "refresh_token": {
                          "type": "string"
                        },
                        "expires_at": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "access_token",
                        "refresh_token"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "session"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "auth-logout",
        "summary": "User logout",
        "description": "Logout current user",
        "tags": [
          "auth"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/customers": {
      "get": {
        "operationId": "customers-list",
        "summary": "List customers",
        "tags": [
          "customers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "credit_hold",
                "closed"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 1000,
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "operationId": "customers-create",
        "summary": "Create customer",
        "tags": [
          "customers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "tax_id": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "account_status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "credit_hold",
                      "closed"
                    ],
                    "default": "active"
                  },
                  "credit_terms_days": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 30
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "line1": {
                        "type": "string",
                        "minLength": 1
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string",
                        "minLength": 1
                      },
                      "state": {
                        "type": "string"
                      },
                      "postal_code": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string",
                        "minLength": 2
                      },
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      },
                      "delivery_window_start": {
                        "type": "string"
                      },
                      "delivery_window_end": {
                        "type": "string"
                      },
                      "instructions": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "line1",
                      "city",
                      "country"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "address"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/customers/{customer_id}": {
      "get": {
        "operationId": "customers-getById",
        "summary": "Get customer by ID",
        "description": "Get a single customer by their ID",
        "tags": [
          "customers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "operationId": "customers-delete",
        "summary": "Delete customer",
        "tags": [
          "customers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/customers/{id}": {
      "put": {
        "operationId": "customers-update",
        "summary": "Update customer",
        "tags": [
          "customers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "tax_id": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "account_status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "credit_hold",
                      "closed"
                    ]
                  },
                  "credit_terms_days": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "line1": {
                        "type": "string",
                        "minLength": 1
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string",
                        "minLength": 1
                      },
                      "state": {
                        "type": "string"
                      },
                      "postal_code": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string",
                        "minLength": 2
                      },
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      },
                      "delivery_window_start": {
                        "type": "string"
                      },
                      "delivery_window_end": {
                        "type": "string"
                      },
                      "instructions": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "line1",
                      "city",
                      "country"
                    ],
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/customers/{customer_id}/orders": {
      "get": {
        "operationId": "customers-getOrderHistory",
        "summary": "Get customer order history",
        "tags": [
          "customers",
          "orders"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 1000,
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "confirmed",
                "scheduled",
                "en_route",
                "delivered",
                "invoiced",
                "cancelled"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/customers/{customer_id}/analytics": {
      "get": {
        "operationId": "customers-getAnalytics",
        "summary": "Get customer analytics",
        "tags": [
          "customers",
          "analytics"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "month",
                "quarter",
                "year"
              ],
              "default": "year"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/customers/validate": {
      "post": {
        "operationId": "customers-validate",
        "summary": "Validate customer data",
        "tags": [
          "customers",
          "validation"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "external_id": {
                    "type": "string"
                  },
                  "tax_id": {
                    "type": "string"
                  },
                  "exclude_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/customers/{customer_id}/addresses": {
      "get": {
        "operationId": "customers-getAddresses",
        "summary": "Get customer addresses",
        "tags": [
          "customers",
          "addresses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "operationId": "customers-createAddress",
        "summary": "Create customer address",
        "description": "Add a new address for a customer",
        "tags": [
          "customers",
          "addresses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "line1": {
                    "type": "string",
                    "minLength": 1
                  },
                  "line2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1
                  },
                  "state": {
                    "type": "string"
                  },
                  "postal_code": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string",
                    "minLength": 2
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "delivery_window_start": {
                    "type": "string"
                  },
                  "delivery_window_end": {
                    "type": "string"
                  },
                  "is_primary": {
                    "type": "boolean",
                    "default": false
                  },
                  "instructions": {
                    "type": "string"
                  }
                },
                "required": [
                  "line1",
                  "city",
                  "country"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/addresses/{address_id}": {
      "put": {
        "operationId": "customers-updateAddress",
        "summary": "Update address",
        "description": "Update an existing address",
        "tags": [
          "addresses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "label": {
                    "type": "string"
                  },
                  "line1": {
                    "type": "string"
                  },
                  "line2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "postal_code": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "delivery_window_start": {
                    "type": "string"
                  },
                  "delivery_window_end": {
                    "type": "string"
                  },
                  "is_primary": {
                    "type": "boolean"
                  },
                  "instructions": {
                    "type": "string"
                  },
                  "special_instructions": {
                    "type": "string"
                  },
                  "preferred_delivery_days": {
                    "type": "string"
                  },
                  "avoid_delivery_dates": {
                    "type": "string"
                  },
                  "access_code": {
                    "type": "string"
                  },
                  "gate_code": {
                    "type": "string"
                  }
                },
                "required": [
                  "customer_id"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "operationId": "customers-deleteAddress",
        "summary": "Delete address",
        "description": "Delete an address",
        "tags": [
          "addresses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/addresses/{address_id}/set-primary": {
      "post": {
        "operationId": "customers-setPrimaryAddress",
        "summary": "Set primary address",
        "description": "Set an address as the primary address for a customer",
        "tags": [
          "addresses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "customer_id"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/addresses/geocode": {
      "post": {
        "operationId": "customers-geocodeAddress",
        "summary": "Geocode address",
        "description": "Get latitude and longitude coordinates for an address",
        "tags": [
          "addresses",
          "geocoding"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "line1": {
                    "type": "string",
                    "minLength": 1
                  },
                  "line2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1
                  },
                  "state": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string",
                    "minLength": 2
                  },
                  "postal_code": {
                    "type": "string"
                  }
                },
                "required": [
                  "line1",
                  "city",
                  "country"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/addresses/validate": {
      "post": {
        "operationId": "customers-validateAddress",
        "summary": "Validate address",
        "description": "Validate address format and existence through geocoding",
        "tags": [
          "addresses",
          "validation"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "line1": {
                    "type": "string",
                    "minLength": 1
                  },
                  "line2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1
                  },
                  "state": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string",
                    "minLength": 2
                  },
                  "postal_code": {
                    "type": "string"
                  }
                },
                "required": [
                  "line1",
                  "city",
                  "country"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/addresses/validate-delivery-window": {
      "post": {
        "operationId": "customers-validateDeliveryWindow",
        "summary": "Validate delivery window",
        "description": "Validate delivery window times against business rules",
        "tags": [
          "addresses",
          "validation"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delivery_window_start": {
                    "type": "string"
                  },
                  "delivery_window_end": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/deliveries/process": {
      "post": {
        "operationId": "deliveries-process",
        "summary": "Process delivery or pickup",
        "description": "Process a delivery or pickup operation with items and location data",
        "tags": [
          "deliveries"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "delivery",
                      "pickup"
                    ]
                  },
                  "data": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "order_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "customer_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "delivery_address_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "truck_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "delivery_items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "product_id": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "quantity_delivered": {
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "quantity_returned": {
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "unit_price": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "product_id",
                                "quantity_delivered"
                              ],
                              "additionalProperties": false
                            },
                            "minItems": 1
                          },
                          "driver_name": {
                            "type": "string"
                          },
                          "driver_notes": {
                            "type": "string"
                          },
                          "delivery_latitude": {
                            "type": "number"
                          },
                          "delivery_longitude": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "customer_id",
                          "truck_id",
                          "delivery_items"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "customer_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "pickup_address_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "truck_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "pickup_items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "product_id": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "quantity_picked_up": {
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "condition": {
                                  "type": "string",
                                  "enum": [
                                    "good",
                                    "damaged",
                                    "needs_repair"
                                  ]
                                }
                              },
                              "required": [
                                "product_id",
                                "quantity_picked_up"
                              ],
                              "additionalProperties": false
                            },
                            "minItems": 1
                          },
                          "driver_name": {
                            "type": "string"
                          },
                          "driver_notes": {
                            "type": "string"
                          },
                          "pickup_latitude": {
                            "type": "number"
                          },
                          "pickup_longitude": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "customer_id",
                          "truck_id",
                          "pickup_items"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/deliveries/complete": {
      "post": {
        "operationId": "deliveries-complete",
        "summary": "Complete delivery or pickup",
        "description": "Mark a delivery or pickup as completed with optional signature and photo proof",
        "tags": [
          "deliveries"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "delivery",
                      "pickup"
                    ]
                  },
                  "data": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "delivery_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "customer_signature": {
                            "type": "string"
                          },
                          "photo_proof": {
                            "type": "string"
                          },
                          "delivery_latitude": {
                            "type": "number"
                          },
                          "delivery_longitude": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "delivery_id"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "pickup_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "customer_signature": {
                            "type": "string"
                          },
                          "photo_proof": {
                            "type": "string"
                          },
                          "pickup_latitude": {
                            "type": "number"
                          },
                          "pickup_longitude": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "pickup_id"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/deliveries": {
      "get": {
        "operationId": "deliveries-listDeliveries",
        "summary": "List deliveries",
        "description": "Get a paginated list of deliveries with optional filtering",
        "tags": [
          "deliveries"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "truck_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "in_transit",
                "delivered",
                "failed",
                "cancelled"
              ]
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pickups": {
      "get": {
        "operationId": "deliveries-listPickups",
        "summary": "List pickups",
        "description": "Get a paginated list of pickups with optional filtering",
        "tags": [
          "deliveries",
          "pickups"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "truck_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "in_transit",
                "completed",
                "failed",
                "cancelled"
              ]
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/customers/{customer_id}/cylinder-balance": {
      "get": {
        "operationId": "deliveries-getCustomerBalance",
        "summary": "Get customer cylinder balance",
        "description": "Get the current cylinder balance for a customer",
        "tags": [
          "deliveries",
          "customers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/deliveries/{delivery_id}": {
      "get": {
        "operationId": "deliveries-getDelivery",
        "summary": "Get delivery details",
        "description": "Get detailed information about a specific delivery including items",
        "tags": [
          "deliveries"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "delivery_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pickups/{pickup_id}": {
      "get": {
        "operationId": "deliveries-getPickup",
        "summary": "Get pickup details",
        "description": "Get detailed information about a specific pickup including items",
        "tags": [
          "deliveries",
          "pickups"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "pickup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/customers/{customer_id}/transactions": {
      "get": {
        "operationId": "deliveries-getCustomerTransactions",
        "summary": "Get customer transactions",
        "description": "Get paginated transaction history for a customer with optional filtering",
        "tags": [
          "deliveries",
          "customers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/inventory": {
      "get": {
        "operationId": "inventory-list",
        "summary": "List inventory with advanced filtering",
        "description": "Get inventory balance with advanced filtering, stock level analysis, and business intelligence. Supports filtering by warehouse, product, stock levels, and search terms.",
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "low_stock_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "out_of_stock_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "overstocked_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "critical_stock_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "product_status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "obsolete"
              ]
            }
          },
          {
            "name": "stock_threshold_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 365,
              "default": 30
            }
          },
          {
            "name": "min_qty_available",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "max_qty_available",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "include_reserved",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "updated_at",
                "qty_available",
                "product_name",
                "warehouse_name",
                "stock_level_ratio"
              ],
              "default": "updated_at"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/inventory/warehouse/{warehouse_id}": {
      "get": {
        "operationId": "inventory-getByWarehouse",
        "summary": "Get inventory by warehouse",
        "description": "Retrieve all inventory records for a specific warehouse with product details.",
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/inventory/product/{product_id}": {
      "get": {
        "operationId": "inventory-getByProduct",
        "summary": "Get inventory by product",
        "description": "Retrieve inventory records for a specific product across all warehouses.",
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/inventory/stats": {
      "get": {
        "operationId": "inventory-getStats",
        "summary": "Get inventory statistics",
        "description": "Get basic inventory statistics including totals and low stock counts. Optionally filter by warehouse.",
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/inventory/adjust": {
      "post": {
        "operationId": "inventory-adjustStock",
        "summary": "Adjust inventory stock levels",
        "description": "Adjust the quantity of full and empty cylinders in inventory with business rule validation and audit trail.",
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "inventory_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "adjustment_type": {
                    "type": "string",
                    "enum": [
                      "received_full",
                      "received_empty",
                      "physical_count",
                      "damage_loss",
                      "other"
                    ]
                  },
                  "qty_full_change": {
                    "type": "number"
                  },
                  "qty_empty_change": {
                    "type": "number"
                  },
                  "reason": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "inventory_id",
                  "adjustment_type",
                  "qty_full_change",
                  "qty_empty_change",
                  "reason"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/inventory/transfer": {
      "post": {
        "operationId": "inventory-transferStock",
        "summary": "Transfer stock between warehouses",
        "description": "Transfer inventory between warehouses with full validation and atomicity. Creates destination inventory if it doesn't exist.",
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from_warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "to_warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "product_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "qty_full": {
                    "type": "number",
                    "minimum": 0
                  },
                  "qty_empty": {
                    "type": "number",
                    "minimum": 0
                  },
                  "notes": {
                    "type": "string"
                  }
                },
                "required": [
                  "from_warehouse_id",
                  "to_warehouse_id",
                  "product_id",
                  "qty_full",
                  "qty_empty"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/inventory/create": {
      "post": {
        "operationId": "inventory-create",
        "summary": "Create new inventory balance record",
        "description": "Create a new inventory balance record for a specific product and warehouse.",
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "product_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "qty_full": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0
                  },
                  "qty_empty": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0
                  },
                  "qty_reserved": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0
                  }
                },
                "required": [
                  "warehouse_id",
                  "product_id"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/inventory/reserve": {
      "post": {
        "operationId": "inventory-reserve",
        "summary": "Reserve inventory for orders",
        "description": "Reserve a specified quantity of inventory for an order. This is idempotent, meaning it can be called multiple times with the same result.",
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "reservations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "quantity": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "warehouse_id": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      "required": [
                        "product_id",
                        "quantity"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "reservations"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/inventory/movements": {
      "get": {
        "operationId": "inventory-getMovements",
        "summary": "Get recent stock movements",
        "description": "Retrieve a list of recent stock movements (inventory adjustments, transfers, etc.) across all warehouses.",
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "warehouse_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/inventory/validate-adjustment": {
      "post": {
        "operationId": "inventory-validateAdjustment",
        "summary": "Validate stock adjustment business rules",
        "description": "Validate if a proposed stock adjustment would violate any business rules (e.g., negative stock, insufficient reserved stock, large adjustments, pending transfers).",
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "inventory_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "qty_full_change": {
                    "type": "number"
                  },
                  "qty_empty_change": {
                    "type": "number"
                  },
                  "adjustment_type": {
                    "type": "string",
                    "enum": [
                      "received_full",
                      "received_empty",
                      "physical_count",
                      "damage_loss",
                      "other"
                    ]
                  }
                },
                "required": [
                  "inventory_id",
                  "qty_full_change",
                  "qty_empty_change",
                  "adjustment_type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/inventory/low-stock": {
      "get": {
        "operationId": "inventory-getLowStock",
        "summary": "Get low stock items with intelligent thresholds",
        "description": "Retrieve a list of products that are low on stock, considering their projected availability and urgency levels.",
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "urgency_level",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "critical",
                "low",
                "warning"
              ],
              "default": "low"
            }
          },
          {
            "name": "days_ahead",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 90,
              "default": 14
            }
          },
          {
            "name": "include_seasonal",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/inventory/availability": {
      "post": {
        "operationId": "inventory-checkAvailability",
        "summary": "Check product availability with business rules",
        "description": "Validate if a requested quantity of products is available across warehouses, considering delivery dates and priority.",
        "tags": [
          "inventory"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "products": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "quantity_requested": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "warehouse_preference": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      "required": [
                        "product_id",
                        "quantity_requested"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "delivery_date": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "normal",
                      "high",
                      "urgent"
                    ],
                    "default": "normal"
                  }
                },
                "required": [
                  "products"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products": {
      "get": {
        "operationId": "products-list",
        "summary": "List products with advanced filtering",
        "description": "Retrieve a comprehensive list of products with advanced filtering, inventory data, and business intelligence including popularity and compliance scores.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "obsolete"
              ]
            }
          },
          {
            "name": "unit_of_measure",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "cylinder",
                "kg"
              ]
            }
          },
          {
            "name": "variant_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "cylinder",
                "refillable",
                "disposable"
              ],
              "default": "cylinder"
            }
          },
          {
            "name": "has_inventory",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "low_stock_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "availability_status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "available",
                "low_stock",
                "out_of_stock"
              ]
            }
          },
          {
            "name": "capacity_min",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "capacity_max",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "weight_min",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "weight_max",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "requires_tag",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_variant",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 1000,
              "default": 50
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "name",
                "sku",
                "capacity_kg",
                "inventory_level",
                "last_sold"
              ],
              "default": "created_at"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "show_obsolete",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "include_inventory_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "operationId": "products-create",
        "summary": "Create new product",
        "description": "Create a new product with full validation including SKU uniqueness and parent product verification for variants.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string",
                    "minLength": 1
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string"
                  },
                  "unit_of_measure": {
                    "type": "string",
                    "enum": [
                      "cylinder",
                      "kg"
                    ]
                  },
                  "capacity_kg": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "tare_weight_kg": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "valve_type": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "obsolete"
                    ],
                    "default": "active"
                  },
                  "barcode_uid": {
                    "type": "string"
                  },
                  "requires_tag": {
                    "type": "boolean",
                    "default": false
                  },
                  "variant_type": {
                    "type": "string",
                    "enum": [
                      "cylinder",
                      "refillable",
                      "disposable"
                    ],
                    "default": "cylinder"
                  },
                  "variant": {
                    "type": "string",
                    "enum": [
                      "outright",
                      "refill"
                    ],
                    "default": "outright"
                  },
                  "parent_product_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "variant_name": {
                    "type": "string"
                  },
                  "is_variant": {
                    "type": "boolean",
                    "default": false
                  },
                  "tax_category": {
                    "type": "string"
                  },
                  "tax_rate": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  }
                },
                "required": [
                  "sku",
                  "name",
                  "unit_of_measure"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "products-getById",
        "summary": "Get product by ID",
        "description": "Retrieve detailed information about a specific product by its ID.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "put": {
        "operationId": "products-update",
        "summary": "Update product",
        "description": "Update an existing product with validation. SKU uniqueness is checked if SKU is being updated.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string",
                    "minLength": 1
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string"
                  },
                  "unit_of_measure": {
                    "type": "string",
                    "enum": [
                      "cylinder",
                      "kg"
                    ]
                  },
                  "capacity_kg": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "tare_weight_kg": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "valve_type": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "obsolete"
                    ]
                  },
                  "barcode_uid": {
                    "type": "string"
                  },
                  "requires_tag": {
                    "type": "boolean"
                  },
                  "variant": {
                    "type": "string",
                    "enum": [
                      "outright",
                      "refill"
                    ]
                  },
                  "variant_type": {
                    "type": "string",
                    "enum": [
                      "cylinder",
                      "refillable",
                      "disposable"
                    ]
                  },
                  "parent_product_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "variant_name": {
                    "type": "string"
                  },
                  "is_variant": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "operationId": "products-delete",
        "summary": "Delete product (soft delete)",
        "description": "Soft delete a product by setting its status to obsolete. Validates that product has no existing inventory.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products/stats": {
      "get": {
        "operationId": "products-getStats",
        "summary": "Get product statistics",
        "description": "Get basic statistics about products",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products/options": {
      "get": {
        "operationId": "products-getOptions",
        "summary": "Get product options for dropdowns",
        "description": "Retrieve simplified product data for use in dropdowns and selection components.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "name": "include_variants",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products/{parent_product_id}/variants": {
      "get": {
        "operationId": "products-getVariants",
        "summary": "Get product variants",
        "description": "Retrieve all variants for a specific parent product.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "parent_product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "operationId": "products-createVariant",
        "summary": "Create product variant",
        "description": "Create a new variant for an existing parent product with full validation.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "variant_name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "sku": {
                    "type": "string",
                    "minLength": 1
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "obsolete"
                    ],
                    "default": "active"
                  },
                  "barcode_uid": {
                    "type": "string"
                  }
                },
                "required": [
                  "variant_name",
                  "sku",
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "parent_product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products/bulk-update-status": {
      "post": {
        "operationId": "products-bulkUpdateStatus",
        "summary": "Bulk update product status",
        "description": "Update the status of multiple products individually with detailed success/error tracking.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "minItems": 1
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "obsolete"
                    ]
                  }
                },
                "required": [
                  "product_ids",
                  "status"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products/reactivate": {
      "post": {
        "operationId": "products-reactivate",
        "summary": "Reactivate obsolete product",
        "description": "Reactivate a previously obsoleted product by setting its status to active.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products/validate": {
      "post": {
        "operationId": "products-validate",
        "summary": "Validate product data",
        "description": "Validate product data including SKU uniqueness and name similarity checks.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string",
                    "minLength": 1
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "exclude_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "sku",
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products/validate-sku": {
      "post": {
        "operationId": "products-validateSku",
        "summary": "Validate SKU format and uniqueness",
        "description": "Validate SKU format, length constraints, reserved prefixes, and uniqueness.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string",
                    "minLength": 1
                  },
                  "exclude_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "sku"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products/validate-weight": {
      "post": {
        "operationId": "products-validateWeight",
        "summary": "Validate weight constraints",
        "description": "Validate cylinder capacity and tare weight constraints with business rule validation.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "capacity_kg": {
                    "type": "number"
                  },
                  "tare_weight_kg": {
                    "type": "number"
                  },
                  "unit_of_measure": {
                    "type": "string",
                    "enum": [
                      "cylinder",
                      "kg"
                    ]
                  }
                },
                "required": [
                  "unit_of_measure"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products/calculate-inventory-movements": {
      "post": {
        "operationId": "products-calculateInventoryMovements",
        "summary": "Calculate inventory movements for orders",
        "description": "Calculate inventory movements based on order type and line items for delivery, refill, exchange, and pickup orders.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "order_type": {
                        "type": "string",
                        "enum": [
                          "delivery",
                          "refill",
                          "exchange",
                          "pickup"
                        ]
                      },
                      "exchange_empty_qty": {
                        "type": "number",
                        "minimum": 0,
                        "default": 0
                      },
                      "order_lines": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "product_id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "quantity": {
                              "type": "number",
                              "minimum": 1
                            },
                            "product": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "id",
                            "product_id",
                            "quantity",
                            "product"
                          ],
                          "additionalProperties": false
                        }
                      }
                    },
                    "required": [
                      "id",
                      "order_type",
                      "order_lines"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "order"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products/calculate-exchange-quantity": {
      "post": {
        "operationId": "products-calculateExchangeQuantity",
        "summary": "Calculate exchange quantity for order types",
        "description": "Calculate the appropriate exchange quantity based on order type (refill/exchange).",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order": {
                    "type": "object",
                    "properties": {
                      "order_type": {
                        "type": "string",
                        "enum": [
                          "delivery",
                          "refill",
                          "exchange",
                          "pickup"
                        ]
                      },
                      "exchange_empty_qty": {
                        "type": "number",
                        "minimum": 0,
                        "default": 0
                      }
                    },
                    "required": [
                      "order_type"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "order"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products/standard-cylinder-variants": {
      "get": {
        "operationId": "products-getStandardCylinderVariants",
        "summary": "Get standard cylinder variants",
        "description": "Get the standard cylinder variants (full/empty) used in the system.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products/generate-variant-sku": {
      "post": {
        "operationId": "products-generateVariantSku",
        "summary": "Generate SKU for product variant",
        "description": "Generate a properly formatted SKU for a product variant based on parent SKU and variant name.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parent_sku": {
                    "type": "string",
                    "minLength": 1
                  },
                  "variant_name": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "parent_sku",
                  "variant_name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/products/create-variant-data": {
      "post": {
        "operationId": "products-createVariantData",
        "summary": "Create variant product data",
        "description": "Generate complete variant product data structure based on parent product and variant details.",
        "tags": [
          "products"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parent_product": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "sku": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "active",
                          "obsolete"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "sku",
                      "name",
                      "status"
                    ],
                    "additionalProperties": false
                  },
                  "variant_name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "parent_product",
                  "variant_name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transfers": {
      "get": {
        "operationId": "transfers-list",
        "summary": "List transfers with filtering and pagination",
        "description": "Retrieve a paginated list of transfers with filtering options including source/destination warehouses, status, dates, and search text.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "source_warehouse_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "destination_warehouse_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "not": {}
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "transfer_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "internal",
                "external",
                "adjustment",
                "return"
              ]
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_by_user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "search_text",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "transfer_date",
                "total_items",
                "total_weight_kg"
              ],
              "default": "created_at"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "operationId": "transfers-create",
        "summary": "Create new transfer",
        "description": "Create a new inventory transfer between warehouses with validation and automatic reference generation.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "source_warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "destination_warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "transfer_date": {
                    "type": "string"
                  },
                  "scheduled_date": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "low",
                      "normal",
                      "high",
                      "urgent"
                    ],
                    "default": "normal"
                  },
                  "transfer_reference": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "instructions": {
                    "type": "string"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "product_sku": {
                          "type": "string"
                        },
                        "product_name": {
                          "type": "string"
                        },
                        "variant_name": {
                          "type": "string"
                        },
                        "variant_type": {
                          "type": "string",
                          "enum": [
                            "cylinder",
                            "refillable",
                            "disposable"
                          ]
                        },
                        "quantity_to_transfer": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "available_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "reserved_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_weight_kg": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_cost": {
                          "type": "number",
                          "minimum": 0
                        },
                        "source_location": {
                          "type": "string"
                        },
                        "batch_number": {
                          "type": "string"
                        },
                        "expiry_date": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "product_id",
                        "quantity_to_transfer"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "source_warehouse_id",
                  "destination_warehouse_id",
                  "transfer_date",
                  "items"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transfers/{transfer_id}": {
      "get": {
        "operationId": "transfers-getById",
        "summary": "Get transfer by ID",
        "description": "Retrieve detailed information about a specific transfer including all items and warehouse details.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transfers/validate": {
      "post": {
        "operationId": "transfers-validate",
        "summary": "Validate transfer request",
        "description": "Validate a transfer request including inventory availability, warehouse capacity, and business rules. Uses atomic validation for single items and enhanced validation for multi-item transfers.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "source_warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "destination_warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "transfer_date": {
                    "type": "string"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "product_sku": {
                          "type": "string"
                        },
                        "product_name": {
                          "type": "string"
                        },
                        "variant_name": {
                          "type": "string"
                        },
                        "variant_type": {
                          "type": "string",
                          "enum": [
                            "cylinder",
                            "refillable",
                            "disposable"
                          ]
                        },
                        "quantity_to_transfer": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "available_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "reserved_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_weight_kg": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_cost": {
                          "type": "number",
                          "minimum": 0
                        },
                        "source_location": {
                          "type": "string"
                        },
                        "batch_number": {
                          "type": "string"
                        },
                        "expiry_date": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "product_id",
                        "quantity_to_transfer"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "source_warehouse_id",
                  "destination_warehouse_id",
                  "transfer_date",
                  "items"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transfers/{transfer_id}/status": {
      "post": {
        "operationId": "transfers-updateStatus",
        "summary": "Update transfer status",
        "description": "Update the status of a transfer with validation and automatic inventory updates upon completion.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "pending",
                      "approved",
                      "in_transit",
                      "completed",
                      "cancelled"
                    ]
                  },
                  "notes": {
                    "type": "string"
                  },
                  "completed_items": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                "required": [
                  "new_status"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transfers/warehouse-stock": {
      "get": {
        "operationId": "transfers-getWarehouseStock",
        "summary": "Get warehouse stock for transfer planning",
        "description": "Retrieve warehouse stock information filtered by product types and availability for transfer planning purposes.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "search_text",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variant_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "cylinder",
                "refillable",
                "disposable"
              ]
            }
          },
          {
            "name": "variant_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "has_stock",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transfers/{transfer_id}/cost-analysis": {
      "get": {
        "operationId": "transfers-getCostAnalysis",
        "summary": "Get transfer cost analysis",
        "description": "Calculate comprehensive cost analysis for a transfer including handling, transport costs, and efficiency metrics.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transfers/search-products": {
      "get": {
        "operationId": "transfers-searchProducts",
        "summary": "Search products for transfer",
        "description": "Search and filter products available for transfer by variant type, warehouse, and text search.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "search_text",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variant_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "cylinder",
                "refillable",
                "disposable"
              ]
            }
          },
          {
            "name": "variant_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transfers/validate-multi-sku": {
      "post": {
        "operationId": "transfers-validateMultiSkuTransfer",
        "summary": "Validate multi-SKU transfer",
        "description": "Perform comprehensive validation for multi-SKU transfers with enhanced business logic and conflict detection.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "source_warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "destination_warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "transfer_date": {
                    "type": "string"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "product_sku": {
                          "type": "string"
                        },
                        "product_name": {
                          "type": "string"
                        },
                        "variant_name": {
                          "type": "string"
                        },
                        "variant_type": {
                          "type": "string",
                          "enum": [
                            "cylinder",
                            "refillable",
                            "disposable"
                          ]
                        },
                        "quantity_to_transfer": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "available_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "reserved_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_weight_kg": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_cost": {
                          "type": "number",
                          "minimum": 0
                        },
                        "source_location": {
                          "type": "string"
                        },
                        "batch_number": {
                          "type": "string"
                        },
                        "expiry_date": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "product_id",
                        "quantity_to_transfer"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  },
                  "notes": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "low",
                      "normal",
                      "high",
                      "urgent"
                    ],
                    "default": "normal"
                  }
                },
                "required": [
                  "source_warehouse_id",
                  "destination_warehouse_id",
                  "transfer_date",
                  "items"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transfers/calculate-details": {
      "post": {
        "operationId": "transfers-calculateTransferDetails",
        "summary": "Calculate transfer item details",
        "description": "Calculate detailed information for transfer items including weights, costs, and validation status.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "product_sku": {
                          "type": "string"
                        },
                        "product_name": {
                          "type": "string"
                        },
                        "variant_name": {
                          "type": "string"
                        },
                        "variant_type": {
                          "type": "string",
                          "enum": [
                            "cylinder",
                            "refillable",
                            "disposable"
                          ]
                        },
                        "quantity_to_transfer": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "available_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "reserved_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_weight_kg": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_cost": {
                          "type": "number",
                          "minimum": 0
                        },
                        "source_location": {
                          "type": "string"
                        },
                        "batch_number": {
                          "type": "string"
                        },
                        "expiry_date": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "product_id",
                        "quantity_to_transfer"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "items"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transfers/validate-capacity": {
      "post": {
        "operationId": "transfers-validateTransferCapacity",
        "summary": "Validate warehouse capacity",
        "description": "Validate if the destination warehouse has sufficient capacity for the proposed transfer.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "product_sku": {
                          "type": "string"
                        },
                        "product_name": {
                          "type": "string"
                        },
                        "variant_name": {
                          "type": "string"
                        },
                        "variant_type": {
                          "type": "string",
                          "enum": [
                            "cylinder",
                            "refillable",
                            "disposable"
                          ]
                        },
                        "quantity_to_transfer": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "available_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "reserved_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_weight_kg": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_cost": {
                          "type": "number",
                          "minimum": 0
                        },
                        "source_location": {
                          "type": "string"
                        },
                        "batch_number": {
                          "type": "string"
                        },
                        "expiry_date": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "product_id",
                        "quantity_to_transfer"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  },
                  "warehouse_capacity_kg": {
                    "type": "number"
                  }
                },
                "required": [
                  "warehouse_id",
                  "items"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transfers/validate-inventory": {
      "post": {
        "operationId": "transfers-validateInventoryAvailability",
        "summary": "Validate inventory availability",
        "description": "Validate if sufficient inventory is available at the source warehouse for the transfer.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "product_sku": {
                          "type": "string"
                        },
                        "product_name": {
                          "type": "string"
                        },
                        "variant_name": {
                          "type": "string"
                        },
                        "variant_type": {
                          "type": "string",
                          "enum": [
                            "cylinder",
                            "refillable",
                            "disposable"
                          ]
                        },
                        "quantity_to_transfer": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "available_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "reserved_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_weight_kg": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_cost": {
                          "type": "number",
                          "minimum": 0
                        },
                        "source_location": {
                          "type": "string"
                        },
                        "batch_number": {
                          "type": "string"
                        },
                        "expiry_date": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "product_id",
                        "quantity_to_transfer"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "warehouse_id",
                  "items"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transfers/check-conflicts": {
      "post": {
        "operationId": "transfers-checkTransferConflicts",
        "summary": "Check for transfer conflicts",
        "description": "Check for potential conflicts with existing transfers on the same date and warehouse.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "source_warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "destination_warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "transfer_date": {
                    "type": "string"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "product_sku": {
                          "type": "string"
                        },
                        "product_name": {
                          "type": "string"
                        },
                        "variant_name": {
                          "type": "string"
                        },
                        "variant_type": {
                          "type": "string",
                          "enum": [
                            "cylinder",
                            "refillable",
                            "disposable"
                          ]
                        },
                        "quantity_to_transfer": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "available_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "reserved_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_weight_kg": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_cost": {
                          "type": "number",
                          "minimum": 0
                        },
                        "source_location": {
                          "type": "string"
                        },
                        "batch_number": {
                          "type": "string"
                        },
                        "expiry_date": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "product_id",
                        "quantity_to_transfer"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "source_warehouse_id",
                  "destination_warehouse_id",
                  "transfer_date",
                  "items"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transfers/estimate-duration": {
      "post": {
        "operationId": "transfers-estimateTransferDuration",
        "summary": "Estimate transfer duration",
        "description": "Calculate estimated duration for transfer completion including preparation, loading, transport, and unloading time.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "product_sku": {
                          "type": "string"
                        },
                        "product_name": {
                          "type": "string"
                        },
                        "variant_name": {
                          "type": "string"
                        },
                        "variant_type": {
                          "type": "string",
                          "enum": [
                            "cylinder",
                            "refillable",
                            "disposable"
                          ]
                        },
                        "quantity_to_transfer": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "available_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "reserved_stock": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_weight_kg": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unit_cost": {
                          "type": "number",
                          "minimum": 0
                        },
                        "source_location": {
                          "type": "string"
                        },
                        "batch_number": {
                          "type": "string"
                        },
                        "expiry_date": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "product_id",
                        "quantity_to_transfer"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  },
                  "estimated_distance_km": {
                    "type": "number"
                  }
                },
                "required": [
                  "items"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transfers/format-validation-errors": {
      "post": {
        "operationId": "transfers-formatValidationErrors",
        "summary": "Format validation errors",
        "description": "Format validation errors into user-friendly display format with categorization.",
        "tags": [
          "transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "validation_result": {
                    "type": "object",
                    "properties": {
                      "is_valid": {
                        "type": "boolean"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "warnings": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "blocked_items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "total_weight_kg": {
                        "type": "number"
                      },
                      "estimated_cost": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "is_valid",
                      "errors",
                      "warnings",
                      "blocked_items",
                      "total_weight_kg"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "validation_result"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks": {
      "get": {
        "operationId": "trucks-list",
        "summary": "List trucks with filtering and pagination",
        "description": "Retrieve a paginated list of trucks with optional filtering by search text, status, and active state. Includes inventory data for each truck.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "inactive",
                "maintenance"
              ]
            }
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "operationId": "trucks-create",
        "summary": "Create new truck",
        "description": "Create a new truck with fleet information, capacity details, and driver assignment.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fleet_number": {
                    "type": "string",
                    "minLength": 1
                  },
                  "license_plate": {
                    "type": "string",
                    "minLength": 1
                  },
                  "capacity_cylinders": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "capacity_kg": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "driver_name": {
                    "type": "string",
                    "nullable": true
                  },
                  "active": {
                    "type": "boolean",
                    "default": true
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive",
                      "maintenance"
                    ],
                    "default": "active"
                  },
                  "last_maintenance_date": {
                    "type": "string",
                    "nullable": true
                  },
                  "next_maintenance_due": {
                    "type": "string",
                    "nullable": true
                  },
                  "maintenance_interval_days": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "fuel_capacity_liters": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0,
                    "nullable": true
                  },
                  "avg_fuel_consumption": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0,
                    "nullable": true
                  }
                },
                "required": [
                  "fleet_number",
                  "license_plate",
                  "capacity_cylinders"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/{id}": {
      "get": {
        "operationId": "trucks-get",
        "summary": "Get truck details with inventory",
        "description": "Retrieve detailed information about a specific truck including current inventory, route information, and capacity calculations.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "put": {
        "operationId": "trucks-update",
        "summary": "Update truck information",
        "description": "Update truck details including fleet number, capacity, driver information, and maintenance schedules.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fleet_number": {
                    "type": "string",
                    "minLength": 1
                  },
                  "license_plate": {
                    "type": "string",
                    "minLength": 1
                  },
                  "capacity_cylinders": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "capacity_kg": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "driver_name": {
                    "type": "string",
                    "nullable": true
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive",
                      "maintenance"
                    ]
                  },
                  "last_maintenance_date": {
                    "type": "string",
                    "nullable": true
                  },
                  "next_maintenance_due": {
                    "type": "string",
                    "nullable": true
                  },
                  "maintenance_interval_days": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "fuel_capacity_liters": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0,
                    "nullable": true
                  },
                  "avg_fuel_consumption": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0,
                    "nullable": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "operationId": "trucks-delete",
        "summary": "Delete truck",
        "description": "Delete a truck from the fleet. This action cannot be undone.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/allocations": {
      "get": {
        "operationId": "trucks-getAllocations",
        "summary": "Get truck allocations",
        "description": "Retrieve truck allocations for a specific date and/or truck with order assignments and capacity information.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "truck_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "operationId": "trucks-allocateOrder",
        "summary": "Allocate order to truck",
        "description": "Assign an order to a specific truck with estimated weight and delivery sequence information.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "truck_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "order_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "allocation_date": {
                    "type": "string"
                  },
                  "estimated_weight_kg": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "stop_sequence": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  }
                },
                "required": [
                  "truck_id",
                  "order_id",
                  "allocation_date",
                  "estimated_weight_kg"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/allocations/{id}": {
      "put": {
        "operationId": "trucks-updateAllocation",
        "summary": "Update truck allocation",
        "description": "Update the status or sequence of an existing truck allocation.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "planned",
                      "loaded",
                      "delivered",
                      "cancelled"
                    ]
                  },
                  "stop_sequence": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/routes": {
      "get": {
        "operationId": "trucks-getRoutes",
        "summary": "Get truck routes",
        "description": "Retrieve planned and actual routes for trucks on a specific date with timing and distance information.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "truck_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "operationId": "trucks-createRoute",
        "summary": "Create truck route",
        "description": "Create a new route plan for a truck with scheduled times and distance estimates.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "truck_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "route_date": {
                    "type": "string"
                  },
                  "planned_start_time": {
                    "type": "string"
                  },
                  "planned_end_time": {
                    "type": "string"
                  },
                  "total_distance_km": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "estimated_duration_hours": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  }
                },
                "required": [
                  "truck_id",
                  "route_date"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/routes/{id}": {
      "put": {
        "operationId": "trucks-updateRoute",
        "summary": "Update truck route",
        "description": "Update route information with actual times, status changes, and fuel consumption data.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "actual_start_time": {
                    "type": "string"
                  },
                  "actual_end_time": {
                    "type": "string"
                  },
                  "route_status": {
                    "type": "string",
                    "enum": [
                      "planned",
                      "in_progress",
                      "completed",
                      "cancelled"
                    ]
                  },
                  "actual_duration_hours": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "fuel_used_liters": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/maintenance": {
      "get": {
        "operationId": "trucks-getMaintenance",
        "summary": "Get maintenance records",
        "description": "Retrieve maintenance records for trucks with scheduling, completion status, and cost information.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "truck_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "operationId": "trucks-scheduleMaintenance",
        "summary": "Schedule truck maintenance",
        "description": "Schedule maintenance for a truck with type, date, description, and mechanic assignment.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "truck_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "maintenance_type": {
                    "type": "string",
                    "enum": [
                      "routine",
                      "repair",
                      "inspection",
                      "emergency"
                    ]
                  },
                  "scheduled_date": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "cost": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "mechanic": {
                    "type": "string"
                  }
                },
                "required": [
                  "truck_id",
                  "maintenance_type",
                  "scheduled_date",
                  "description"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/maintenance/{id}": {
      "put": {
        "operationId": "trucks-updateMaintenance",
        "summary": "Update maintenance record",
        "description": "Update maintenance record with completion status, actual costs, and mechanic notes.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "completed_date": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "scheduled",
                      "in_progress",
                      "completed",
                      "cancelled"
                    ]
                  },
                  "cost": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "mechanic": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/calculate-order-weight": {
      "post": {
        "operationId": "trucks-calculateOrderWeight",
        "summary": "Calculate order weight",
        "description": "Calculate the total weight of an order for truck capacity planning and allocation decisions.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_lines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "order_id": {
                          "type": "string"
                        },
                        "product_id": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "number"
                        },
                        "unit_price": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "order_id",
                        "product_id",
                        "quantity",
                        "unit_price"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "product_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "order_lines"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/{truck_id}/capacity": {
      "get": {
        "operationId": "trucks-calculateCapacity",
        "summary": "Calculate truck capacity",
        "description": "Calculate current capacity utilization for a truck on a specific date including existing allocations.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "truck_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/find-best-allocation": {
      "post": {
        "operationId": "trucks-findBestAllocation",
        "summary": "Find best truck allocation",
        "description": "Find the most suitable truck for an order based on capacity, efficiency, and utilization optimization.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "order_weight": {
                    "type": "number"
                  },
                  "target_date": {
                    "type": "string"
                  }
                },
                "required": [
                  "order_id",
                  "order_weight",
                  "target_date"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/validate-allocation": {
      "post": {
        "operationId": "trucks-validateAllocation",
        "summary": "Validate truck allocation",
        "description": "Validate if a specific truck can accommodate an order considering capacity constraints and existing allocations.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "truck_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "order_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "order_weight": {
                    "type": "number"
                  },
                  "target_date": {
                    "type": "string"
                  }
                },
                "required": [
                  "truck_id",
                  "order_id",
                  "order_weight",
                  "target_date"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/optimize-allocations": {
      "post": {
        "operationId": "trucks-optimizeAllocations",
        "summary": "Optimize truck allocations",
        "description": "Optimize truck allocations for multiple orders to maximize efficiency and minimize costs.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "target_date": {
                    "type": "string"
                  }
                },
                "required": [
                  "order_ids",
                  "target_date"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/{truck_id}/load-inventory": {
      "post": {
        "operationId": "trucks-loadInventory",
        "summary": "Load truck inventory",
        "description": "Load inventory from warehouse to truck with atomic transfer validation and comprehensive logging.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "qty_full": {
                          "type": "number",
                          "minimum": 0
                        },
                        "qty_empty": {
                          "type": "number",
                          "minimum": 0
                        }
                      },
                      "required": [
                        "product_id",
                        "qty_full",
                        "qty_empty"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "warehouse_id",
                  "items"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "truck_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/{truck_id}/unload-inventory": {
      "post": {
        "operationId": "trucks-unloadInventory",
        "summary": "Unload truck inventory",
        "description": "Unload inventory from truck to warehouse with transfer validation and tracking.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "qty_full": {
                          "type": "number",
                          "minimum": 0
                        },
                        "qty_empty": {
                          "type": "number",
                          "minimum": 0
                        }
                      },
                      "required": [
                        "product_id",
                        "qty_full",
                        "qty_empty"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "warehouse_id",
                  "items"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "truck_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/trucks/{truck_id}/inventory": {
      "get": {
        "operationId": "trucks-getInventory",
        "summary": "Get truck inventory",
        "description": "Retrieve current inventory status for a truck with capacity utilization and product details.",
        "tags": [
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "truck_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "include_product_details",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "not": {}
                },
                {
                  "type": "boolean"
                }
              ],
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/warehouses": {
      "get": {
        "operationId": "warehouses-list",
        "summary": "List warehouses with filtering and pagination",
        "description": "Retrieve a paginated list of warehouses with optional search filtering and address information.",
        "tags": [
          "warehouses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 1000,
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "operationId": "warehouses-create",
        "summary": "Create new warehouse",
        "description": "Create a new warehouse with optional address information and capacity details.",
        "tags": [
          "warehouses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "capacity_cylinders": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "line1": {
                        "type": "string",
                        "minLength": 1
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string",
                        "minLength": 1
                      },
                      "state": {
                        "type": "string"
                      },
                      "postal_code": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string",
                        "minLength": 1
                      },
                      "instructions": {
                        "type": "string"
                      },
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "line1",
                      "city",
                      "country"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "capacity_cylinders": {
                      "type": "number",
                      "nullable": true
                    },
                    "address_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "nullable": true
                    },
                    "address": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string",
                            "nullable": true
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string",
                            "nullable": true
                          },
                          "postal_code": {
                            "type": "string",
                            "nullable": true
                          },
                          "country": {
                            "type": "string"
                          },
                          "instructions": {
                            "type": "string",
                            "nullable": true
                          },
                          "latitude": {
                            "type": "number",
                            "nullable": true
                          },
                          "longitude": {
                            "type": "number",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "line1",
                          "line2",
                          "city",
                          "state",
                          "postal_code",
                          "country",
                          "instructions",
                          "latitude",
                          "longitude"
                        ],
                        "additionalProperties": false
                      },
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "capacity_cylinders",
                    "address_id",
                    "created_at",
                    "updated_at",
                    "address"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/warehouses/{id}": {
      "get": {
        "operationId": "warehouses-get",
        "summary": "Get warehouse by ID",
        "description": "Retrieve detailed information about a specific warehouse including address details.",
        "tags": [
          "warehouses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "put": {
        "operationId": "warehouses-update",
        "summary": "Update warehouse",
        "description": "Update warehouse information including name, capacity, and address details.",
        "tags": [
          "warehouses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "capacity_cylinders": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "line1": {
                        "type": "string",
                        "minLength": 1
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string",
                        "minLength": 1
                      },
                      "state": {
                        "type": "string"
                      },
                      "postal_code": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string",
                        "minLength": 1
                      },
                      "instructions": {
                        "type": "string"
                      },
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "line1",
                      "city",
                      "country"
                    ],
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "capacity_cylinders": {
                      "type": "number",
                      "nullable": true
                    },
                    "address_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "nullable": true
                    },
                    "address": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string",
                            "nullable": true
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string",
                            "nullable": true
                          },
                          "postal_code": {
                            "type": "string",
                            "nullable": true
                          },
                          "country": {
                            "type": "string"
                          },
                          "instructions": {
                            "type": "string",
                            "nullable": true
                          },
                          "latitude": {
                            "type": "number",
                            "nullable": true
                          },
                          "longitude": {
                            "type": "number",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "line1",
                          "line2",
                          "city",
                          "state",
                          "postal_code",
                          "country",
                          "instructions",
                          "latitude",
                          "longitude"
                        ],
                        "additionalProperties": false
                      },
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "capacity_cylinders",
                    "address_id",
                    "created_at",
                    "updated_at",
                    "address"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "operationId": "warehouses-delete",
        "summary": "Delete warehouse",
        "description": "Delete a warehouse after validating that it has no associated inventory, trucks, or orders.",
        "tags": [
          "warehouses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/warehouses/stats": {
      "get": {
        "operationId": "warehouses-getStats",
        "summary": "Get warehouse statistics",
        "description": "Retrieve aggregate statistics about warehouses including total count and capacity information.",
        "tags": [
          "warehouses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/warehouses/options": {
      "get": {
        "operationId": "warehouses-getOptions",
        "summary": "Get warehouse options for dropdowns",
        "description": "Retrieve simplified warehouse information suitable for dropdown lists and selection components.",
        "tags": [
          "warehouses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "operationId": "orders-list",
        "summary": "List orders with advanced filtering",
        "description": "Retrieve a paginated list of orders with comprehensive filtering options, business logic calculations, and optional analytics.",
        "tags": [
          "orders"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduled_date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduled_date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount_min",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "amount_max",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "delivery_area",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_overdue",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "delivery_method",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pickup",
                "delivery"
              ]
            }
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "low",
                "normal",
                "high",
                "urgent"
              ]
            }
          },
          {
            "name": "payment_status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "paid",
                "overdue"
              ]
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "order_date",
                "scheduled_date",
                "total_amount",
                "customer_name"
              ],
              "default": "created_at"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "include_analytics",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "operationId": "orders-create",
        "summary": "Create new order",
        "description": "Create a new order with comprehensive validation including pricing, inventory, customer status, and business rules.",
        "tags": [
          "orders"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "delivery_address_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "source_warehouse_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "order_date": {
                    "type": "string"
                  },
                  "scheduled_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "idempotency_key": {
                    "type": "string"
                  },
                  "validate_pricing": {
                    "type": "boolean",
                    "default": true
                  },
                  "skip_inventory_check": {
                    "type": "boolean",
                    "default": false
                  },
                  "order_type": {
                    "type": "string",
                    "enum": [
                      "delivery",
                      "visit"
                    ],
                    "default": "delivery"
                  },
                  "service_type": {
                    "type": "string",
                    "enum": [
                      "standard",
                      "express",
                      "scheduled"
                    ],
                    "default": "standard"
                  },
                  "exchange_empty_qty": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0
                  },
                  "requires_pickup": {
                    "type": "boolean",
                    "default": false
                  },
                  "order_lines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "quantity": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "unit_price": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "expected_price": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "price_list_id": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      "required": [
                        "product_id",
                        "quantity"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "customer_id",
                  "source_warehouse_id"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/{order_id}": {
      "get": {
        "operationId": "orders-getById",
        "summary": "Get order by ID",
        "description": "Retrieve detailed information about a specific order including customer, address, order lines, and payment information.",
        "tags": [
          "orders"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/{order_id}/calculate-total": {
      "post": {
        "operationId": "orders-calculateTotal",
        "summary": "Calculate order total",
        "description": "Calculate the total amount for an order including tax calculations and line item breakdowns.",
        "tags": [
          "orders"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/{order_id}/status": {
      "post": {
        "operationId": "orders-updateStatus",
        "summary": "Update order status",
        "description": "Update order status with inventory management, business rule validation, and automated workflows.",
        "tags": [
          "orders"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "confirmed",
                      "dispatched",
                      "en_route",
                      "delivered",
                      "invoiced",
                      "cancelled",
                      "paid",
                      "completed_no_sale"
                    ]
                  },
                  "scheduled_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                  }
                },
                "required": [
                  "new_status"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/{order_id}/update-tax": {
      "post": {
        "operationId": "orders-updateTax",
        "summary": "Update order tax",
        "description": "Update the tax percentage for an order and recalculate totals.",
        "tags": [
          "orders"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tax_percent": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  }
                },
                "required": [
                  "tax_percent"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/workflow": {
      "get": {
        "operationId": "orders-getWorkflow",
        "summary": "Get order workflow steps",
        "description": "Retrieve the complete order workflow with status definitions and transition rules.",
        "tags": [
          "orders",
          "workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/workflow/validate-transition": {
      "post": {
        "operationId": "orders-validateTransition",
        "summary": "Validate status transition",
        "description": "Validate whether a status transition is allowed according to business rules.",
        "tags": [
          "orders",
          "workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "current_status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "confirmed",
                      "dispatched",
                      "en_route",
                      "delivered",
                      "invoiced",
                      "cancelled",
                      "paid",
                      "completed_no_sale"
                    ]
                  },
                  "new_status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "confirmed",
                      "dispatched",
                      "en_route",
                      "delivered",
                      "invoiced",
                      "cancelled",
                      "paid",
                      "completed_no_sale"
                    ]
                  }
                },
                "required": [
                  "current_status",
                  "new_status"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/workflow/calculate-totals": {
      "post": {
        "operationId": "orders-calculateTotals",
        "summary": "Calculate order totals with tax",
        "description": "Calculate order totals including tax for order lines with detailed breakdown.",
        "tags": [
          "orders",
          "workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "quantity": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "unit_price": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "subtotal": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "quantity",
                        "unit_price"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "tax_percent": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  }
                },
                "required": [
                  "lines"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/workflow/validate-for-confirmation": {
      "post": {
        "operationId": "orders-validateForConfirmation",
        "summary": "Validate order for confirmation",
        "description": "Validate whether an order can be confirmed according to business rules and inventory availability.",
        "tags": [
          "orders",
          "workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order": {}
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/workflow/validate-for-scheduling": {
      "post": {
        "operationId": "orders-validateForScheduling",
        "summary": "Validate order for scheduling",
        "description": "Validate whether an order can be scheduled for delivery according to business rules.",
        "tags": [
          "orders",
          "workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order": {}
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/workflow/validate-delivery-window": {
      "post": {
        "operationId": "orders-validateDeliveryWindow",
        "summary": "Validate delivery window",
        "description": "Validate the delivery window for an order based on address and service constraints.",
        "tags": [
          "orders",
          "workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order": {}
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/{order_id}/workflow-info": {
      "get": {
        "operationId": "orders-getWorkflowInfo",
        "summary": "Get order workflow information",
        "description": "Get detailed workflow information for a specific order including current status and possible transitions.",
        "tags": [
          "orders",
          "workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/workflow/format-order-id": {
      "post": {
        "operationId": "orders-formatOrderId",
        "summary": "Format order ID",
        "description": "Format an order ID for display purposes.",
        "tags": [
          "orders",
          "workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "order_id"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/workflow/format-currency": {
      "post": {
        "operationId": "orders-formatCurrency",
        "summary": "Format currency amount",
        "description": "Format a currency amount for display purposes.",
        "tags": [
          "orders",
          "workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                },
                "required": [
                  "amount"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/workflow/format-date": {
      "post": {
        "operationId": "orders-formatDate",
        "summary": "Format date",
        "description": "Format a date for display purposes.",
        "tags": [
          "orders",
          "workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "date"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/allocate-to-truck": {
      "post": {
        "operationId": "orders-allocateToTruck",
        "summary": "Allocate order to truck",
        "description": "Allocate an order to a specific truck for delivery with capacity validation.",
        "tags": [
          "orders",
          "trucks"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "truck_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "allocation_date": {
                    "type": "string"
                  },
                  "force_allocation": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": [
                  "order_id",
                  "allocation_date"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/orders/{order_id}/convert-visit-to-delivery": {
      "post": {
        "operationId": "orders-convertVisitToDelivery",
        "summary": "Convert visit order to delivery order",
        "description": "Convert a visit order to a delivery order by adding products and quantities",
        "tags": [
          "orders",
          "visit"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_lines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "quantity": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        }
                      },
                      "required": [
                        "product_id",
                        "quantity"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "order_lines"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "order_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "total_amount": {
                      "type": "number"
                    },
                    "products_count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "order_id",
                    "total_amount",
                    "products_count"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/price-lists": {
      "get": {
        "operationId": "pricing-listPriceLists",
        "summary": "List price lists with filtering and pagination",
        "description": "Retrieve a paginated list of price lists with optional filtering by search text, currency, and status.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 3
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "future",
                "expired"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 1000,
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "operationId": "pricing-createPriceList",
        "summary": "Create new price list",
        "description": "Create a new price list with validation for date ranges and name uniqueness.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string"
                  },
                  "currency_code": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3,
                    "default": "KES"
                  },
                  "start_date": {
                    "type": "string"
                  },
                  "end_date": {
                    "type": "string"
                  },
                  "is_default": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": [
                  "name",
                  "start_date"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/price-lists/{price_list_id}": {
      "get": {
        "operationId": "pricing-getPriceList",
        "summary": "Get price list by ID",
        "description": "Retrieve detailed information about a specific price list.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "price_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/price-lists/{id}": {
      "put": {
        "operationId": "pricing-updatePriceList",
        "summary": "Update price list",
        "description": "Update price list information including name, dates, currency, and default status.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string"
                  },
                  "currency_code": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "start_date": {
                    "type": "string"
                  },
                  "end_date": {
                    "type": "string"
                  },
                  "is_default": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/price-lists/{price_list_id}/items": {
      "get": {
        "operationId": "pricing-getPriceListItems",
        "summary": "Get price list items",
        "description": "Retrieve paginated list of items in a specific price list with product details.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "price_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 1000,
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/price-list-items": {
      "post": {
        "operationId": "pricing-createPriceListItem",
        "summary": "Create price list item",
        "description": "Add a new product to a price list with pricing information.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price_list_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "product_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "unit_price": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "min_qty": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "surcharge_pct": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "price_excluding_tax": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "tax_amount": {
                    "type": "number",
                    "minimum": 0
                  },
                  "price_including_tax": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  }
                },
                "required": [
                  "price_list_id",
                  "product_id",
                  "unit_price"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/calculate-final-price": {
      "post": {
        "operationId": "pricing-calculateFinalPrice",
        "summary": "Calculate final price with surcharge",
        "description": "Calculate the final price for a product including any surcharge percentage.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "unitPrice": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "surchargePercent": {
                    "type": "number"
                  }
                },
                "required": [
                  "unitPrice"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/price-list-status": {
      "get": {
        "operationId": "pricing-getPriceListStatus",
        "summary": "Get price list status",
        "description": "Determine the status of a price list based on start and end dates.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/validate-date-range": {
      "post": {
        "operationId": "pricing-validateDateRange",
        "summary": "Validate date range",
        "description": "Validate that a start and end date range is valid for a price list.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  }
                },
                "required": [
                  "startDate"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/is-expiring-soon": {
      "get": {
        "operationId": "pricing-isExpiringSoon",
        "summary": "Check if expiring soon",
        "description": "Check if a price list is expiring within a specified number of days.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "not": {}
                },
                {
                  "type": "number"
                }
              ],
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/product-price/{productId}": {
      "get": {
        "operationId": "pricing-getProductPrice",
        "summary": "Get product price",
        "description": "Get the current price for a specific product, optionally for a specific customer and date.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/product-prices": {
      "post": {
        "operationId": "pricing-getProductPrices",
        "summary": "Get multiple product prices",
        "description": "Get current prices for multiple products, optionally for a specific customer and date.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "customerId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "date": {
                    "type": "string"
                  }
                },
                "required": [
                  "productIds"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/product/{productId}/price-list-items": {
      "get": {
        "operationId": "pricing-getProductPriceListItems",
        "summary": "Get product price list items",
        "description": "Get all price list items for a specific product across all price lists.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/calculate-order-totals": {
      "post": {
        "operationId": "pricing-calculateOrderTotals",
        "summary": "Calculate order totals",
        "description": "Calculate subtotal, tax amount, and grand total for an order with line items.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "quantity": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "unit_price": {
                          "type": "number",
                          "minimum": 0
                        },
                        "subtotal": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "quantity",
                        "unit_price"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "taxPercent": {
                    "type": "number",
                    "default": 0
                  }
                },
                "required": [
                  "lines"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/validate-product-pricing": {
      "post": {
        "operationId": "pricing-validateProductPricing",
        "summary": "Validate product pricing",
        "description": "Validate if a requested price for a product is within acceptable ranges.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "requestedPrice": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "quantity": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "priceListId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "productId",
                  "requestedPrice",
                  "quantity"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/active-price-lists": {
      "get": {
        "operationId": "pricing-getActivePriceLists",
        "summary": "Get active price lists",
        "description": "Get all price lists that are currently active for a specific date.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/format-currency": {
      "post": {
        "operationId": "pricing-formatCurrency",
        "summary": "Format currency",
        "description": "Format a numeric amount as a currency string.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "currencyCode": {
                    "type": "string",
                    "default": "KES"
                  }
                },
                "required": [
                  "amount"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/price-lists": {
      "get": {
        "operationId": "pricing-list",
        "summary": "List price lists with filtering and pagination",
        "description": "Retrieve a paginated list of price lists with optional filtering by search text, currency, and status.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 3
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "future",
                "expired"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 1000,
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "operationId": "pricing-create",
        "summary": "Create new price list",
        "description": "Create a new price list with validation for date ranges and name uniqueness.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string"
                  },
                  "currency_code": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3,
                    "default": "KES"
                  },
                  "start_date": {
                    "type": "string"
                  },
                  "end_date": {
                    "type": "string"
                  },
                  "is_default": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": [
                  "name",
                  "start_date"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "currency_code": {
                      "type": "string"
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "end_date": {
                      "type": "string",
                      "nullable": true
                    },
                    "is_default": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "nullable": true
                    },
                    "product_count": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "active",
                            "future",
                            "expired"
                          ]
                        },
                        "daysUntilStart": {
                          "type": "number"
                        },
                        "daysUntilEnd": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "status"
                      ],
                      "additionalProperties": false
                    },
                    "isExpiringSoon": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "currency_code",
                    "start_date",
                    "end_date",
                    "is_default",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/price-lists/{id}": {
      "get": {
        "operationId": "pricing-getById",
        "summary": "Get price list by ID",
        "description": "Retrieve detailed information about a specific price list.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "currency_code": {
                      "type": "string"
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "end_date": {
                      "type": "string",
                      "nullable": true
                    },
                    "is_default": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "nullable": true
                    },
                    "product_count": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "active",
                            "future",
                            "expired"
                          ]
                        },
                        "daysUntilStart": {
                          "type": "number"
                        },
                        "daysUntilEnd": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "status"
                      ],
                      "additionalProperties": false
                    },
                    "isExpiringSoon": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "currency_code",
                    "start_date",
                    "end_date",
                    "is_default",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "put": {
        "operationId": "pricing-update",
        "summary": "Update price list",
        "description": "Update price list information including name, dates, currency, and default status.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string"
                  },
                  "currency_code": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "start_date": {
                    "type": "string"
                  },
                  "end_date": {
                    "type": "string"
                  },
                  "is_default": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "operationId": "pricing-delete",
        "summary": "Delete price list",
        "description": "Delete a price list after validating that it is not referenced by existing orders.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/price-lists/{id}/set-default": {
      "put": {
        "operationId": "pricing-setDefault",
        "summary": "Set price list as default",
        "description": "Set a specific price list as the default price list for the organization.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "currency_code": {
                      "type": "string"
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "end_date": {
                      "type": "string",
                      "nullable": true
                    },
                    "is_default": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "nullable": true
                    },
                    "product_count": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "active",
                            "future",
                            "expired"
                          ]
                        },
                        "daysUntilStart": {
                          "type": "number"
                        },
                        "daysUntilEnd": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "status"
                      ],
                      "additionalProperties": false
                    },
                    "isExpiringSoon": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "currency_code",
                    "start_date",
                    "end_date",
                    "is_default",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/price-lists/{price_list_id}/items": {
      "get": {
        "operationId": "pricing-getItems",
        "summary": "Get price list items",
        "description": "Retrieve paginated list of items in a specific price list with product details.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "price_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 1000,
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "price_list_id": {
                            "type": "string"
                          },
                          "product_id": {
                            "type": "string"
                          },
                          "unit_price": {
                            "type": "number"
                          },
                          "min_qty": {
                            "type": "number",
                            "nullable": true
                          },
                          "surcharge_pct": {
                            "type": "number",
                            "nullable": true
                          },
                          "price_excluding_tax": {
                            "type": "number",
                            "nullable": true
                          },
                          "tax_amount": {
                            "type": "number",
                            "nullable": true
                          },
                          "price_including_tax": {
                            "type": "number",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string",
                            "nullable": true
                          },
                          "product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "unit_of_measure": {
                                "type": "string"
                              },
                              "tax_category": {
                                "type": "string",
                                "nullable": true
                              },
                              "tax_rate": {
                                "type": "number",
                                "nullable": true
                              }
                            },
                            "required": [
                              "id",
                              "sku",
                              "name",
                              "unit_of_measure",
                              "tax_category",
                              "tax_rate"
                            ],
                            "additionalProperties": false
                          },
                          "price_list": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true
                              },
                              "currency_code": {
                                "type": "string"
                              },
                              "start_date": {
                                "type": "string"
                              },
                              "end_date": {
                                "type": "string",
                                "nullable": true
                              },
                              "is_default": {
                                "type": "boolean"
                              },
                              "created_at": {
                                "type": "string"
                              },
                              "updated_at": {
                                "type": "string",
                                "nullable": true
                              },
                              "product_count": {
                                "type": "number"
                              },
                              "status": {
                                "type": "string"
                              },
                              "statusInfo": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "active",
                                      "future",
                                      "expired"
                                    ]
                                  },
                                  "daysUntilStart": {
                                    "type": "number"
                                  },
                                  "daysUntilEnd": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "status"
                                ],
                                "additionalProperties": false
                              },
                              "isExpiringSoon": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "description",
                              "currency_code",
                              "start_date",
                              "end_date",
                              "is_default",
                              "created_at",
                              "updated_at"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "id",
                          "price_list_id",
                          "product_id",
                          "unit_price",
                          "min_qty",
                          "surcharge_pct",
                          "price_excluding_tax",
                          "tax_amount",
                          "price_including_tax",
                          "created_at",
                          "updated_at"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "totalCount": {
                      "type": "number"
                    },
                    "totalPages": {
                      "type": "number"
                    },
                    "currentPage": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items",
                    "totalCount",
                    "totalPages",
                    "currentPage"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/price-list-items": {
      "post": {
        "operationId": "pricing-createItem",
        "summary": "Create price list item",
        "description": "Add a new product to a price list with pricing information.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price_list_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "product_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "unit_price": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "min_qty": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "surcharge_pct": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "price_excluding_tax": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "tax_amount": {
                    "type": "number",
                    "minimum": 0
                  },
                  "price_including_tax": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  }
                },
                "required": [
                  "price_list_id",
                  "product_id",
                  "unit_price"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "price_list_id": {
                      "type": "string"
                    },
                    "product_id": {
                      "type": "string"
                    },
                    "unit_price": {
                      "type": "number"
                    },
                    "min_qty": {
                      "type": "number",
                      "nullable": true
                    },
                    "surcharge_pct": {
                      "type": "number",
                      "nullable": true
                    },
                    "price_excluding_tax": {
                      "type": "number",
                      "nullable": true
                    },
                    "tax_amount": {
                      "type": "number",
                      "nullable": true
                    },
                    "price_including_tax": {
                      "type": "number",
                      "nullable": true
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "nullable": true
                    },
                    "product": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "sku": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "unit_of_measure": {
                          "type": "string"
                        },
                        "tax_category": {
                          "type": "string",
                          "nullable": true
                        },
                        "tax_rate": {
                          "type": "number",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id",
                        "sku",
                        "name",
                        "unit_of_measure",
                        "tax_category",
                        "tax_rate"
                      ],
                      "additionalProperties": false
                    },
                    "price_list": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "currency_code": {
                          "type": "string"
                        },
                        "start_date": {
                          "type": "string"
                        },
                        "end_date": {
                          "type": "string",
                          "nullable": true
                        },
                        "is_default": {
                          "type": "boolean"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string",
                          "nullable": true
                        },
                        "product_count": {
                          "type": "number"
                        },
                        "status": {
                          "type": "string"
                        },
                        "statusInfo": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": [
                                "active",
                                "future",
                                "expired"
                              ]
                            },
                            "daysUntilStart": {
                              "type": "number"
                            },
                            "daysUntilEnd": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "status"
                          ],
                          "additionalProperties": false
                        },
                        "isExpiringSoon": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "currency_code",
                        "start_date",
                        "end_date",
                        "is_default",
                        "created_at",
                        "updated_at"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "id",
                    "price_list_id",
                    "product_id",
                    "unit_price",
                    "min_qty",
                    "surcharge_pct",
                    "price_excluding_tax",
                    "tax_amount",
                    "price_including_tax",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/price-list-items/{id}": {
      "put": {
        "operationId": "pricing-updateItem",
        "summary": "Update price list item",
        "description": "Update pricing information for a specific item in a price list.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "unit_price": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "min_qty": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "surcharge_pct": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "price_excluding_tax": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "tax_amount": {
                    "type": "number",
                    "minimum": 0
                  },
                  "price_including_tax": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "price_list_id": {
                      "type": "string"
                    },
                    "product_id": {
                      "type": "string"
                    },
                    "unit_price": {
                      "type": "number"
                    },
                    "min_qty": {
                      "type": "number",
                      "nullable": true
                    },
                    "surcharge_pct": {
                      "type": "number",
                      "nullable": true
                    },
                    "price_excluding_tax": {
                      "type": "number",
                      "nullable": true
                    },
                    "tax_amount": {
                      "type": "number",
                      "nullable": true
                    },
                    "price_including_tax": {
                      "type": "number",
                      "nullable": true
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "nullable": true
                    },
                    "product": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "sku": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "unit_of_measure": {
                          "type": "string"
                        },
                        "tax_category": {
                          "type": "string",
                          "nullable": true
                        },
                        "tax_rate": {
                          "type": "number",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id",
                        "sku",
                        "name",
                        "unit_of_measure",
                        "tax_category",
                        "tax_rate"
                      ],
                      "additionalProperties": false
                    },
                    "price_list": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "currency_code": {
                          "type": "string"
                        },
                        "start_date": {
                          "type": "string"
                        },
                        "end_date": {
                          "type": "string",
                          "nullable": true
                        },
                        "is_default": {
                          "type": "boolean"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string",
                          "nullable": true
                        },
                        "product_count": {
                          "type": "number"
                        },
                        "status": {
                          "type": "string"
                        },
                        "statusInfo": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": [
                                "active",
                                "future",
                                "expired"
                              ]
                            },
                            "daysUntilStart": {
                              "type": "number"
                            },
                            "daysUntilEnd": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "status"
                          ],
                          "additionalProperties": false
                        },
                        "isExpiringSoon": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "currency_code",
                        "start_date",
                        "end_date",
                        "is_default",
                        "created_at",
                        "updated_at"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "id",
                    "price_list_id",
                    "product_id",
                    "unit_price",
                    "min_qty",
                    "surcharge_pct",
                    "price_excluding_tax",
                    "tax_amount",
                    "price_including_tax",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "operationId": "pricing-deleteItem",
        "summary": "Delete price list item",
        "description": "Remove a product from a price list.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "price_list_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "price_list_id"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/price-lists/bulk-add": {
      "post": {
        "operationId": "pricing-bulkAddProducts",
        "summary": "Bulk add products to price list",
        "description": "Add multiple products to a price list with various pricing methods including copy from another list, markup, or fixed pricing.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price_list_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "product_ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "pricing_method": {
                    "type": "string",
                    "enum": [
                      "fixed",
                      "copy_from_list",
                      "markup",
                      "cost_plus"
                    ]
                  },
                  "unit_price": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0
                  },
                  "source_price_list_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "markup_percentage": {
                    "type": "number"
                  },
                  "min_qty": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "surcharge_pct": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  }
                },
                "required": [
                  "price_list_id",
                  "product_ids",
                  "pricing_method"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "price_list_id": {
                            "type": "string"
                          },
                          "product_id": {
                            "type": "string"
                          },
                          "unit_price": {
                            "type": "number"
                          },
                          "min_qty": {
                            "type": "number",
                            "nullable": true
                          },
                          "surcharge_pct": {
                            "type": "number",
                            "nullable": true
                          },
                          "price_excluding_tax": {
                            "type": "number",
                            "nullable": true
                          },
                          "tax_amount": {
                            "type": "number",
                            "nullable": true
                          },
                          "price_including_tax": {
                            "type": "number",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string",
                            "nullable": true
                          },
                          "product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "unit_of_measure": {
                                "type": "string"
                              },
                              "tax_category": {
                                "type": "string",
                                "nullable": true
                              },
                              "tax_rate": {
                                "type": "number",
                                "nullable": true
                              }
                            },
                            "required": [
                              "id",
                              "sku",
                              "name",
                              "unit_of_measure",
                              "tax_category",
                              "tax_rate"
                            ],
                            "additionalProperties": false
                          },
                          "price_list": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true
                              },
                              "currency_code": {
                                "type": "string"
                              },
                              "start_date": {
                                "type": "string"
                              },
                              "end_date": {
                                "type": "string",
                                "nullable": true
                              },
                              "is_default": {
                                "type": "boolean"
                              },
                              "created_at": {
                                "type": "string"
                              },
                              "updated_at": {
                                "type": "string",
                                "nullable": true
                              },
                              "product_count": {
                                "type": "number"
                              },
                              "status": {
                                "type": "string"
                              },
                              "statusInfo": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "active",
                                      "future",
                                      "expired"
                                    ]
                                  },
                                  "daysUntilStart": {
                                    "type": "number"
                                  },
                                  "daysUntilEnd": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "status"
                                ],
                                "additionalProperties": false
                              },
                              "isExpiringSoon": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "description",
                              "currency_code",
                              "start_date",
                              "end_date",
                              "is_default",
                              "created_at",
                              "updated_at"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "id",
                          "price_list_id",
                          "product_id",
                          "unit_price",
                          "min_qty",
                          "surcharge_pct",
                          "price_excluding_tax",
                          "tax_amount",
                          "price_including_tax",
                          "created_at",
                          "updated_at"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "successCount": {
                      "type": "number"
                    },
                    "errorCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items",
                    "errors",
                    "successCount",
                    "errorCount"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/stats": {
      "get": {
        "operationId": "pricing-getStats",
        "summary": "Get pricing statistics",
        "description": "Retrieve comprehensive statistics about price lists, products, and pricing coverage.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_price_lists": {
                      "type": "number"
                    },
                    "active_price_lists": {
                      "type": "number"
                    },
                    "future_price_lists": {
                      "type": "number"
                    },
                    "expired_price_lists": {
                      "type": "number"
                    },
                    "expiring_soon": {
                      "type": "number"
                    },
                    "products_without_pricing": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "total_price_lists",
                    "active_price_lists",
                    "future_price_lists",
                    "expired_price_lists",
                    "expiring_soon",
                    "products_without_pricing"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/calculate": {
      "post": {
        "operationId": "pricing-calculate",
        "summary": "Calculate dynamic pricing for multiple items",
        "description": "Calculate the final price for multiple products based on their pricing in active price lists.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "quantity": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "price_list_id": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      "required": [
                        "product_id",
                        "quantity"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "pricing_date": {
                    "type": "string"
                  }
                },
                "required": [
                  "items"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "product_id": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "unit_price": {
                            "type": "number"
                          },
                          "surcharge_pct": {
                            "type": "number",
                            "nullable": true
                          },
                          "final_price": {
                            "type": "number"
                          },
                          "subtotal": {
                            "type": "number"
                          },
                          "price_list_id": {
                            "type": "string"
                          },
                          "price_list_name": {
                            "type": "string"
                          },
                          "min_qty": {
                            "type": "number",
                            "nullable": true
                          },
                          "error": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "product_id",
                          "quantity",
                          "unit_price",
                          "surcharge_pct",
                          "final_price",
                          "subtotal",
                          "price_list_id",
                          "price_list_name",
                          "min_qty"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "totalAmount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "pricing_date": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "items",
                    "totalAmount",
                    "currency",
                    "pricing_date"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/price-lists/validate": {
      "post": {
        "operationId": "pricing-validatePriceList",
        "summary": "Validate price list items",
        "description": "Validate the pricing information for multiple items in a price list.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price_list_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "unit_price": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        }
                      },
                      "required": [
                        "product_id",
                        "unit_price"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "price_list_id",
                  "items"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "price_list_id": {
                      "type": "string"
                    },
                    "price_list_name": {
                      "type": "string"
                    },
                    "validation_results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "product_id": {
                            "type": "string"
                          },
                          "product_sku": {
                            "type": "string"
                          },
                          "product_name": {
                            "type": "string"
                          },
                          "unit_price": {
                            "type": "number"
                          },
                          "is_valid": {
                            "type": "boolean"
                          },
                          "warnings": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "product_id",
                          "product_sku",
                          "product_name",
                          "unit_price",
                          "is_valid",
                          "warnings"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "total_items": {
                      "type": "number"
                    },
                    "valid_items": {
                      "type": "number"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "overall_valid": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "price_list_id",
                    "price_list_name",
                    "validation_results",
                    "total_items",
                    "valid_items",
                    "errors",
                    "overall_valid"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/pricing/bulk-update": {
      "post": {
        "operationId": "pricing-bulkUpdatePrices",
        "summary": "Bulk update prices for a price list",
        "description": "Update multiple price list items in a single price list with new pricing information.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price_list_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "unit_price": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "min_qty": {
                          "type": "integer",
                          "minimum": 1
                        },
                        "surcharge_pct": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100
                        }
                      },
                      "required": [
                        "product_id",
                        "unit_price"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "price_list_id",
                  "updates"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated_items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "price_list_id": {
                            "type": "string"
                          },
                          "product_id": {
                            "type": "string"
                          },
                          "unit_price": {
                            "type": "number"
                          },
                          "min_qty": {
                            "type": "number",
                            "nullable": true
                          },
                          "surcharge_pct": {
                            "type": "number",
                            "nullable": true
                          },
                          "price_excluding_tax": {
                            "type": "number",
                            "nullable": true
                          },
                          "tax_amount": {
                            "type": "number",
                            "nullable": true
                          },
                          "price_including_tax": {
                            "type": "number",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string",
                            "nullable": true
                          },
                          "product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "unit_of_measure": {
                                "type": "string"
                              },
                              "tax_category": {
                                "type": "string",
                                "nullable": true
                              },
                              "tax_rate": {
                                "type": "number",
                                "nullable": true
                              }
                            },
                            "required": [
                              "id",
                              "sku",
                              "name",
                              "unit_of_measure",
                              "tax_category",
                              "tax_rate"
                            ],
                            "additionalProperties": false
                          },
                          "price_list": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true
                              },
                              "currency_code": {
                                "type": "string"
                              },
                              "start_date": {
                                "type": "string"
                              },
                              "end_date": {
                                "type": "string",
                                "nullable": true
                              },
                              "is_default": {
                                "type": "boolean"
                              },
                              "created_at": {
                                "type": "string"
                              },
                              "updated_at": {
                                "type": "string",
                                "nullable": true
                              },
                              "product_count": {
                                "type": "number"
                              },
                              "status": {
                                "type": "string"
                              },
                              "statusInfo": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "active",
                                      "future",
                                      "expired"
                                    ]
                                  },
                                  "daysUntilStart": {
                                    "type": "number"
                                  },
                                  "daysUntilEnd": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "status"
                                ],
                                "additionalProperties": false
                              },
                              "isExpiringSoon": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "description",
                              "currency_code",
                              "start_date",
                              "end_date",
                              "is_default",
                              "created_at",
                              "updated_at"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "id",
                          "price_list_id",
                          "product_id",
                          "unit_price",
                          "min_qty",
                          "surcharge_pct",
                          "price_excluding_tax",
                          "tax_amount",
                          "price_including_tax",
                          "created_at",
                          "updated_at"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "success_count": {
                      "type": "number"
                    },
                    "error_count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "updated_items",
                    "errors",
                    "success_count",
                    "error_count"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/customers/{customer_id}/pricing-tiers": {
      "get": {
        "operationId": "pricing-getCustomerPricingTiers",
        "summary": "Get customer pricing tiers",
        "description": "Get pricing tier information and applicable price lists for a specific customer.",
        "tags": [
          "pricing"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "tier": {
                          "type": "string"
                        },
                        "credit_terms_days": {
                          "type": "number",
                          "nullable": true
                        },
                        "payment_terms": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "tier",
                        "credit_terms_days",
                        "payment_terms"
                      ],
                      "additionalProperties": false
                    },
                    "pricing_info": {
                      "type": "object",
                      "properties": {
                        "tier_discount_percentage": {
                          "type": "number"
                        },
                        "applicable_price_lists": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "start_date": {
                                "type": "string"
                              },
                              "end_date": {
                                "type": "string",
                                "nullable": true
                              },
                              "is_default": {
                                "type": "boolean"
                              },
                              "currency_code": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true
                              },
                              "created_at": {
                                "type": "string"
                              },
                              "updated_at": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "start_date",
                              "end_date",
                              "is_default",
                              "currency_code",
                              "description",
                              "created_at",
                              "updated_at"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "special_pricing_rules": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "tier_discount_percentage",
                        "applicable_price_lists",
                        "special_pricing_rules"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "customer",
                    "pricing_info"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "error": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "issues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "additionalProperties": false
                  }
                }
              },
              "required": [
                "message",
                "code"
              ],
              "additionalProperties": false
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "auth"
    },
    {
      "name": "orders"
    },
    {
      "name": "customers"
    },
    {
      "name": "products"
    },
    {
      "name": "inventory"
    },
    {
      "name": "transfers"
    },
    {
      "name": "trucks"
    },
    {
      "name": "warehouses"
    },
    {
      "name": "pricing"
    }
  ],
  "externalDocs": {
    "url": "https://example.com"
  }
}