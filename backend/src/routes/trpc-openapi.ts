import { generateOpenApiDocument } from 'trpc-openapi';
import { authRouter } from './auth';
import { customersRouter } from './customers';
import { deliveriesRouter } from './deliveries';
import { inventoryRouter } from './inventory';
// import { paymentsRouter } from './payments';
import { productsRouter } from './products';
// import { stockMovementsRouter } from './stock-movements';
import { transfersRouter } from './transfers';
import { trucksRouter } from './trucks';
import { warehousesRouter } from './warehouses';
import { ordersRouter } from './orders';
import { pricingRouter } from './pricing';
import { router } from '../lib/trpc';
import fs from 'fs';
import path from 'path';

// Create a minimal router for OpenAPI generation (only routes with meta)
const openApiRouter = router({
  auth: authRouter,
  customers: customersRouter,
  deliveries: deliveriesRouter,
  inventory: inventoryRouter,
  // payments: paymentsRouter,
  products: productsRouter,
  // stockMovements: stockMovementsRouter,
  transfers: transfersRouter,
  trucks: trucksRouter,
  warehouses: warehousesRouter,
  orders: ordersRouter,
  pricing: pricingRouter,
});

// üîß FIX: Dynamic baseUrl based on environment
const getBaseUrl = () => {
  if (process.env.NODE_ENV === 'production') {
    // Use your production URL
    return process.env.PRODUCTION_URL || 'https://ordermanagementsystem-production-3ed7.up.railway.app/api/v1';
  }
  // Local development
  return `http://localhost:${process.env.PORT || 3001}/api/v1`;
};

const openApiDocument = generateOpenApiDocument(openApiRouter, {
  title: 'Order Management System API',
  description: 'Auto-generated OpenAPI spec from tRPC routes with OpenAPI metadata',
  version: '1.0.0',
  baseUrl: getBaseUrl(), // üîß Dynamic baseUrl
  tags: ['auth', 'orders', 'customers', 'products', 'inventory', 'transfers', 'trucks', 'warehouses', 'pricing'],
  docsUrl: 'https://example.com',
});

// Ensure docs directory exists
const docsDir = path.join(__dirname, '../../docs');
if (!fs.existsSync(docsDir)) {
  fs.mkdirSync(docsDir, { recursive: true });
}

// Save it to /docs/openapi-auto.json
const outputPath = path.join(docsDir, 'openapi-auto.json');
fs.writeFileSync(
  outputPath,
  JSON.stringify(openApiDocument, null, 2)
);

console.log('‚úÖ Auto-generated OpenAPI JSON created at:', outputPath);
console.log('üåê Base URL:', getBaseUrl());
console.log('üìù Routes with OpenAPI metadata:', Object.keys(openApiDocument.paths || {}));

export { openApiDocument as autoGeneratedOpenApi, openApiRouter };  