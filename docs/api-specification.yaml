openapi: 3.1.0
info:
  title: Order Management System API
  description: Backend API for LPG Order Management System
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:3001/api/trpc
    description: Development server (tRPC)
  - url: https://ordermanagementsystem-production-3ed7.up.railway.app/api/trpc
    description: Production server (tRPC)

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      required: [message, code]
      properties:
        message:
          type: string
        code:
          type: string
        details:
          type: object

    Order:
      type: object
      required: [id, customer_id, status, total_amount]
      properties:
        id:
          type: string
          format: uuid
        customer_id:
          type: string
          format: uuid
        source_warehouse_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [draft, confirmed, scheduled, en_route, delivered, invoiced, cancelled]
        total_amount:
          type: number
          format: decimal
        tax_amount:
          type: number
          format: decimal
        delivery_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time

    OrderCalculation:
      type: object
      required: [subtotal, tax_amount, total_amount]
      properties:
        subtotal:
          type: number
          format: decimal
        tax_amount:
          type: number
          format: decimal
        total_amount:
          type: number
          format: decimal
        breakdown:
          type: array
          items:
            type: object

    InventoryItem:
      type: object
      required: [product_id, qty_full, qty_reserved]
      properties:
        product_id:
          type: string
          format: uuid
        qty_full:
          type: number
        qty_empty:
          type: number
        qty_reserved:
          type: number
        warehouse_id:
          type: string
          format: uuid

    TransferValidation:
      type: object
      required: [is_valid]
      properties:
        is_valid:
          type: boolean
        errors:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string

    Customer:
      type: object
      required: [id, name, account_status, credit_terms_days]
      properties:
        id:
          type: string
          format: uuid
        external_id:
          type: string
          description: External system identifier
        name:
          type: string
        tax_id:
          type: string
          description: Tax identification number
        phone:
          type: string
        email:
          type: string
          format: email
        account_status:
          type: string
          enum: [active, credit_hold, closed]
          default: active
        credit_terms_days:
          type: integer
          minimum: 0
          default: 30
        primary_address:
          $ref: '#/components/schemas/Address'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Address:
      type: object
      required: [id, line1, city, country]
      properties:
        id:
          type: string
          format: uuid
        label:
          type: string
          description: Address label (e.g., "Main Office", "Warehouse")
        line1:
          type: string
        line2:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        country:
          type: string
          minLength: 2
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        delivery_window_start:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: Delivery window start time (HH:MM format)
        delivery_window_end:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: Delivery window end time (HH:MM format)
        is_primary:
          type: boolean
          default: false
        instructions:
          type: string
          description: Special delivery instructions
        created_at:
          type: string
          format: date-time

    Product:
      type: object
      required: [id, name, sku]
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        sku:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [active, end_of_sale, obsolete]

paths:
  # ORDER MANAGEMENT ENDPOINTS
  /orders.list:
    post:
      summary: List orders with analytics
      description: Retrieve orders with optional filtering and analytics data (tRPC query)
      tags: [Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [draft, confirmed, scheduled, en_route, delivered, invoiced, cancelled]
                customer_id:
                  type: string
                  format: uuid
                include_analytics:
                  type: boolean
                  default: false
                page:
                  type: number
                  default: 1
                limit:
                  type: number
                  default: 50
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          orders:
                            type: array
                            items:
                              $ref: '#/components/schemas/Order'
                          totalCount:
                            type: number
                          analytics:
                            type: object
                            nullable: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orders.create:
    post:
      summary: Create new order
      description: Create a new order with validation and inventory checks (tRPC mutation)
      tags: [Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [customer_id, order_lines, source_warehouse_id]
              properties:
                customer_id:
                  type: string
                  format: uuid
                source_warehouse_id:
                  type: string
                  format: uuid
                order_lines:
                  type: array
                  items:
                    type: object
                    required: [product_id, quantity]
                    properties:
                      product_id:
                        type: string
                        format: uuid
                      quantity:
                        type: number
                delivery_date:
                  type: string
                  format: date-time
                notes:
                  type: string
                tax_percent:
                  type: number
                  default: 0
      responses:
        '200':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Order'

  /orders.get:
    post:
      summary: Get order by ID
      description: Retrieve a specific order by ID (tRPC query)
      tags: [Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Order retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Order'

  /orders.calculateTotals:
    post:
      summary: Calculate order total
      description: Calculate order totals including tax and discounts (tRPC mutation)
      tags: [Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [lines]
              properties:
                lines:
                  type: array
                  items:
                    type: object
                    required: [product_id, quantity, unit_price, subtotal]
                    properties:
                      product_id:
                        type: string
                        format: uuid
                      quantity:
                        type: number
                      unit_price:
                        type: number
                      subtotal:
                        type: number
                tax_percent:
                  type: number
                  default: 0
      responses:
        '200':
          description: Order total calculated
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/OrderCalculation'

  # INVENTORY MANAGEMENT ENDPOINTS
  /inventory.list:
    post:
      summary: Get inventory levels
      description: Retrieve current inventory with filtering options (tRPC query)
      tags: [Inventory]
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                warehouse_id:
                  type: string
                  format: uuid
                product_id:
                  type: string
                  format: uuid
                low_stock_only:
                  type: boolean
                  default: false
                page:
                  type: number
                  default: 1
                limit:
                  type: number
                  default: 50
      responses:
        '200':
          description: Inventory retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          inventory:
                            type: array
                            items:
                              $ref: '#/components/schemas/InventoryItem'
                          totalCount:
                            type: number

  /inventory.getByWarehouse:
    post:
      summary: Get inventory by warehouse
      description: Retrieve inventory for specific warehouse (tRPC query)
      tags: [Inventory]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [warehouse_id]
              properties:
                warehouse_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Warehouse inventory retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/InventoryItem'

  /inventory.adjustStock:
    post:
      summary: Adjust inventory levels
      description: Adjust stock levels with validation and audit trail (tRPC mutation)
      tags: [Inventory]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [inventory_id, adjustment_type, qty_full_change, reason]
              properties:
                inventory_id:
                  type: string
                  format: uuid
                adjustment_type:
                  type: string
                  enum: [received_full, received_empty, physical_count, damage_loss, other]
                qty_full_change:
                  type: number
                qty_empty_change:
                  type: number
                  default: 0
                reason:
                  type: string
      responses:
        '200':
          description: Inventory adjusted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/InventoryItem'

  /inventory.reserve:
    post:
      summary: Reserve inventory
      description: Reserve inventory for orders (tRPC mutation)
      tags: [Inventory]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [reservations]
              properties:
                order_id:
                  type: string
                  format: uuid
                reservations:
                  type: array
                  items:
                    type: object
                    required: [product_id, quantity]
                    properties:
                      product_id:
                        type: string
                        format: uuid
                      quantity:
                        type: number
                      warehouse_id:
                        type: string
                        format: uuid
      responses:
        '200':
          description: Inventory reserved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          success:
                            type: boolean
                          reserved_items:
                            type: array
                            items:
                              $ref: '#/components/schemas/InventoryItem'

  # CUSTOMER MANAGEMENT ENDPOINTS
  # IMPORTANT: All tRPC endpoints use POST method regardless of operation type
  # Query procedures (read operations) and Mutation procedures (write operations)
  # are differentiated in the backend router, not by HTTP method
  
  /customers.list:
    post:
      summary: List customers
      description: |
        Retrieve customers with optional filtering and pagination.
        This is a tRPC QUERY procedure (read-only operation).
        
        Note: Even though this is a read operation, tRPC requires POST method
        to pass query parameters in the request body.
      tags: [Customers]
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                  description: Search term for customer name, email, or tax ID
                account_status:
                  type: string
                  enum: [active, credit_hold, closed]
                  description: Filter by account status
                page:
                  type: number
                  default: 1
                  minimum: 1
                limit:
                  type: number
                  default: 50
                  minimum: 1
                  maximum: 1000
      responses:
        '200':
          description: Customers retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          customers:
                            type: array
                            items:
                              $ref: '#/components/schemas/Customer'
                          totalCount:
                            type: number
                          totalPages:
                            type: number
                          currentPage:
                            type: number

  /customers.getById:
    post:
      summary: Get customer by ID
      description: |
        Retrieve a specific customer by ID with primary address.
        This is a tRPC QUERY procedure (read-only operation).
        
        Note: Parameters are passed in request body, not URL path.
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [customer_id]
              properties:
                customer_id:
                  type: string
                  format: uuid
                  description: The customer's UUID
      responses:
        '200':
          description: Customer retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Customer'

  /customers.create:
    post:
      summary: Create new customer
      description: |
        Create a new customer with address.
        This is a tRPC MUTATION procedure (write operation).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, address]
              properties:
                external_id:
                  type: string
                  description: External system identifier
                name:
                  type: string
                  minLength: 1
                tax_id:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                  format: email
                account_status:
                  type: string
                  enum: [active, credit_hold, closed]
                  default: active
                credit_terms_days:
                  type: integer
                  minimum: 0
                  default: 30
                address:
                  type: object
                  required: [line1, city, country]
                  properties:
                    label:
                      type: string
                    line1:
                      type: string
                      minLength: 1
                    line2:
                      type: string
                    city:
                      type: string
                      minLength: 1
                    state:
                      type: string
                    postal_code:
                      type: string
                    country:
                      type: string
                      minLength: 2
                    latitude:
                      type: number
                      format: double
                    longitude:
                      type: number
                      format: double
                    delivery_window_start:
                      type: string
                      pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
                    delivery_window_end:
                      type: string
                      pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
                    instructions:
                      type: string
      responses:
        '200':
          description: Customer created successfully with primary address
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Customer'

  /customers.update:
    post:
      summary: Update customer
      description: |
        Update customer details and optionally their primary address.
        This is a tRPC MUTATION procedure (write operation).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  format: uuid
                external_id:
                  type: string
                name:
                  type: string
                  minLength: 1
                tax_id:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                  format: email
                account_status:
                  type: string
                  enum: [active, credit_hold, closed]
                credit_terms_days:
                  type: integer
                  minimum: 0
                address:
                  type: object
                  properties:
                    label:
                      type: string
                    line1:
                      type: string
                      minLength: 1
                    line2:
                      type: string
                    city:
                      type: string
                      minLength: 1
                    state:
                      type: string
                    postal_code:
                      type: string
                    country:
                      type: string
                      minLength: 2
                    latitude:
                      type: number
                      format: double
                    longitude:
                      type: number
                      format: double
                    delivery_window_start:
                      type: string
                    delivery_window_end:
                      type: string
                    instructions:
                      type: string
      responses:
        '200':
          description: Customer updated successfully

  /customers.delete:
    post:
      summary: Delete customer
      description: |
        Delete a customer from the system.
        This is a tRPC MUTATION procedure (write operation).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [customer_id]
              properties:
                customer_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Customer deleted successfully

  /customers.getOrderHistory:
    post:
      summary: Get customer order history
      description: |
        Retrieve order history for a specific customer.
        This is a tRPC QUERY procedure (read-only operation).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [customer_id]
              properties:
                customer_id:
                  type: string
                  format: uuid
                limit:
                  type: number
                  default: 50
                  minimum: 1
                  maximum: 1000
                offset:
                  type: number
                  default: 0
                  minimum: 0
                status:
                  type: string
                  enum: [draft, confirmed, scheduled, en_route, delivered, invoiced, cancelled]
      responses:
        '200':
          description: Order history retrieved successfully

  /customers.getAnalytics:
    post:
      summary: Get customer analytics
      description: |
        Get analytics and insights for a specific customer.
        This is a tRPC QUERY procedure (read-only operation).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [customer_id]
              properties:
                customer_id:
                  type: string
                  format: uuid
                period:
                  type: string
                  enum: [month, quarter, year]
                  default: year
      responses:
        '200':
          description: Analytics retrieved successfully

  /customers.validate:
    post:
      summary: Validate customer data
      description: |
        Validate customer data for duplicates and business rules.
        This is a tRPC MUTATION procedure (validation operation).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                  minLength: 1
                email:
                  type: string
                  format: email
                phone:
                  type: string
                external_id:
                  type: string
                tax_id:
                  type: string
                exclude_id:
                  type: string
                  format: uuid
                  description: Customer ID to exclude from duplicate checks (for updates)
      responses:
        '200':
          description: Validation completed

  /customers.validateCreditTerms:
    post:
      summary: Validate credit terms
      description: |
        Validate customer credit terms against business rules.
        This is a tRPC MUTATION procedure (validation operation).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [credit_terms_days, account_status]
              properties:
                credit_terms_days:
                  type: number
                account_status:
                  type: string
                  enum: [active, credit_hold, closed]
                customer_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Credit terms validation completed

  /customers.getAddresses:
    post:
      summary: Get customer addresses
      description: |
        Get all addresses for a specific customer.
        This is a tRPC QUERY procedure (read-only operation).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [customer_id]
              properties:
                customer_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Addresses retrieved successfully

  /customers.createAddress:
    post:
      summary: Create customer address
      description: |
        Add a new address for a customer.
        This is a tRPC MUTATION procedure (write operation).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [customer_id, line1, city, country]
              properties:
                customer_id:
                  type: string
                  format: uuid
                label:
                  type: string
                line1:
                  type: string
                  minLength: 1
                line2:
                  type: string
                city:
                  type: string
                  minLength: 1
                state:
                  type: string
                postal_code:
                  type: string
                country:
                  type: string
                  minLength: 2
                latitude:
                  type: number
                  format: double
                longitude:
                  type: number
                  format: double
                delivery_window_start:
                  type: string
                delivery_window_end:
                  type: string
                is_primary:
                  type: boolean
                  default: false
                instructions:
                  type: string
      responses:
        '200':
          description: Address created successfully

  /customers.updateAddress:
    post:
      summary: Update customer address
      description: |
        Update an existing customer address.
        This is a tRPC MUTATION procedure (write operation).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [address_id, customer_id]
              properties:
                address_id:
                  type: string
                  format: uuid
                customer_id:
                  type: string
                  format: uuid
                label:
                  type: string
                line1:
                  type: string
                  minLength: 1
                line2:
                  type: string
                city:
                  type: string
                  minLength: 1
                state:
                  type: string
                postal_code:
                  type: string
                country:
                  type: string
                  minLength: 2
                latitude:
                  type: number
                  format: double
                longitude:
                  type: number
                  format: double
                delivery_window_start:
                  type: string
                delivery_window_end:
                  type: string
                is_primary:
                  type: boolean
                instructions:
                  type: string
      responses:
        '200':
          description: Address updated successfully

  /customers.deleteAddress:
    post:
      summary: Delete customer address
      description: |
        Delete a customer address.
        This is a tRPC MUTATION procedure (write operation).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [address_id]
              properties:
                address_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Address deleted successfully

  /customers.setPrimaryAddress:
    post:
      summary: Set primary address
      description: |
        Set an address as the primary address for a customer.
        This is a tRPC MUTATION procedure (write operation).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [address_id, customer_id]
              properties:
                address_id:
                  type: string
                  format: uuid
                customer_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Primary address set successfully

  /customers.geocodeAddress:
    post:
      summary: Geocode address
      description: |
        Get latitude/longitude coordinates for an address.
        This is a tRPC MUTATION procedure (external API call).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [line1, city, country]
              properties:
                line1:
                  type: string
                  minLength: 1
                line2:
                  type: string
                city:
                  type: string
                  minLength: 1
                state:
                  type: string
                country:
                  type: string
                  minLength: 2
                postal_code:
                  type: string
      responses:
        '200':
          description: Geocoding completed successfully

  /customers.validateAddress:
    post:
      summary: Validate address
      description: |
        Validate address format and attempt geocoding.
        This is a tRPC MUTATION procedure (validation operation).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [line1, city, country]
              properties:
                line1:
                  type: string
                  minLength: 1
                line2:
                  type: string
                city:
                  type: string
                  minLength: 1
                state:
                  type: string
                country:
                  type: string
                  minLength: 2
                postal_code:
                  type: string
      responses:
        '200':
          description: Address validation completed

  /customers.validateDeliveryWindow:
    post:
      summary: Validate delivery window
      description: |
        Validate delivery window times against business rules.
        This is a tRPC MUTATION procedure (validation operation).
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                delivery_window_start:
                  type: string
                  pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
                delivery_window_end:
                  type: string
                  pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
      responses:
        '200':
          description: Delivery window validation completed

  # PRODUCT MANAGEMENT ENDPOINTS
  /products.list:
    post:
      summary: List products
      description: Retrieve products with optional filtering (tRPC query)
      tags: [Products]
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                status:
                  type: string
                  enum: [active, end_of_sale, obsolete]
                page:
                  type: number
                  default: 1
                limit:
                  type: number
                  default: 50
      responses:
        '200':
          description: Products retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          products:
                            type: array
                            items:
                              $ref: '#/components/schemas/Product'
                          totalCount:
                            type: number

  /products.get:
    post:
      summary: Get product by ID
      description: Retrieve a specific product by ID (tRPC query)
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [id]
              properties:
                id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Product'

  # TRANSFER MANAGEMENT ENDPOINTS
  /transfers.validate:
    post:
      summary: Validate transfer request
      description: Validate multi-SKU transfer with business rules (tRPC mutation)
      tags: [Transfers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [source_warehouse_id, destination_warehouse_id, items]
              properties:
                source_warehouse_id:
                  type: string
                  format: uuid
                destination_warehouse_id:
                  type: string
                  format: uuid
                transfer_date:
                  type: string
                  format: date-time
                items:
                  type: array
                  items:
                    type: object
                    required: [product_id, quantity_to_transfer]
                    properties:
                      product_id:
                        type: string
                        format: uuid
                      quantity_to_transfer:
                        type: number
      responses:
        '200':
          description: Transfer validation completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/TransferValidation'

  /transfers.create:
    post:
      summary: Create transfer
      description: Create and execute validated transfer with inventory updates (tRPC mutation)
      tags: [Transfers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [source_warehouse_id, destination_warehouse_id, items, transfer_type]
              properties:
                source_warehouse_id:
                  type: string
                  format: uuid
                destination_warehouse_id:
                  type: string
                  format: uuid
                transfer_type:
                  type: string
                  enum: [standard, return, load, internal]
                items:
                  type: array
                  items:
                    type: object
                    required: [product_id, quantity_to_transfer]
                    properties:
                      product_id:
                        type: string
                        format: uuid
                      quantity_to_transfer:
                        type: number
                notes:
                  type: string
      responses:
        '200':
          description: Transfer created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          status:
                            type: string
                            enum: [pending, approved, in_transit, completed, cancelled]

  # PRICING MANAGEMENT ENDPOINTS
  /pricing.calculate:
    post:
      summary: Calculate dynamic pricing
      description: Calculate customer-specific pricing with tiers and discounts (tRPC query)
      tags: [Pricing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [customer_id, items]
              properties:
                customer_id:
                  type: string
                  format: uuid
                items:
                  type: array
                  items:
                    type: object
                    required: [product_id, quantity]
                    properties:
                      product_id:
                        type: string
                        format: uuid
                      quantity:
                        type: number
                pricing_date:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Pricing calculated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          total_amount:
                            type: number
                            format: decimal
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                product_id:
                                  type: string
                                  format: uuid
                                unit_price:
                                  type: number
                                  format: decimal
                                subtotal:
                                  type: number
                                  format: decimal

  # ANALYTICS & DASHBOARD ENDPOINTS
  /analytics.getDashboardStats:
    post:
      summary: Get dashboard statistics
      description: Retrieve comprehensive business metrics for dashboard (tRPC query)
      tags: [Analytics]
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                period:
                  type: string
                  enum: [today, week, month, quarter, year]
                  default: month
      responses:
        '200':
          description: Dashboard stats retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          orders:
                            type: object
                            properties:
                              total_count:
                                type: number
                              total_revenue:
                                type: number
                                format: decimal
                          inventory:
                            type: object
                            properties:
                              total_products:
                                type: number
                              low_stock_alerts:
                                type: number
                          customers:
                            type: object
                            properties:
                              total_count:
                                type: number
                              active_count:
                                type: number

# Global error responses
responses:
  UnauthorizedError:
    description: Access token is missing or invalid
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Error'
  
  ForbiddenError:
    description: Insufficient permissions
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Error'
  
  NotFoundError:
    description: Resource not found
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Error'

tags:
  - name: Orders
    description: Order management operations
  - name: Inventory
    description: Inventory and stock management
  - name: Transfers
    description: Inter-warehouse transfers
  - name: Pricing
    description: Pricing and calculation operations
  - name: Analytics
    description: Business analytics and reporting
  - name: Customers
    description: Customer management operations
  - name: Products
    description: Product management operations